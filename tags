!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
+	/code/orig/odds/lib/odds/odds.rb	/^    def +(other)$/;"	f	class:Odds
<<	/code/orig/project_group/lib/project_group/group.rb	/^    def <<(path)$/;"	f	class:ProjectGroup.Group
<=>	/code/orig/baseball_projection/lib/baseball_projection/randomized_projection.rb	/^    def <=>(x)$/;"	f	class:BaseballProjection.RandomizedProjection
==	/code/orig/odds/lib/odds/odds.rb	/^    def ==(x)$/;"	f	class:Odds
Algorithms	/code/orig/odds/lib/odds/algorithms/correlated_kelly.rb	/^  module Algorithms$/;"	m	class:Odds
Algorithms	/code/orig/odds/lib/odds/algorithms/kelly.rb	/^  module Algorithms$/;"	m	class:Odds
Algorithms	/code/orig/odds/lib/odds/algorithms/parlay_utility.rb	/^  module Algorithms$/;"	m	class:Odds
Array	/code/orig/baseball_projection/lib/baseball_projection.rb	/^class Array$/;"	c
Array	/code/orig/bet_store/junk/deps.rb	/^class Array$/;"	c
Array	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^class Array$/;"	c
Array	/code/orig/odds/lib/odds/ext/map_special.rb	/^class Array$/;"	c
Array	/code/orig/odds/lib/odds/ext/math.rb	/^class Array$/;"	c
Array	/code/orig/odds/lib/odds/ext/rand.rb	/^class Array$/;"	c
Base	/code/orig/baseball_lottery/lib/baseball_lottery/season_props.rb	/^    class Base$/;"	c	class:BaseballLottery.SeasonProp
Base	/code/orig/bet_store/app/models/bet_store/question.rb	/^    class Base$/;"	c	class:BetStore.Question
Base	/code/orig/bet_store/app/models/bet_store/side.rb	/^    class Base$/;"	c	class:BetStore.Side
Base	/code/orig/bet_store/junk/app/models/bet_store/question.rb	/^    class Base$/;"	c	class:BetStore.Question
Base	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^    class Base$/;"	c	class:BetStore.Side
Base	/code/orig/bet_store/lib/bet_store/question.rb	/^    class Base$/;"	c	class:BetStore.Question
Base	/code/orig/bet_store/lib/bet_store/side.rb	/^    class Base$/;"	c	class:BetStore.Side
BaseFootballDay	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^  class BaseFootballDay < Day$/;"	c	class:EspnScores
BaseFootballGame	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^  class BaseFootballGame < Game$/;"	c	class:EspnScores
Baseball	/code/orig/baseball/lib/baseball.rb	/^module Baseball$/;"	m
Baseball	/code/orig/baseball/lib/baseball/bases.rb	/^module Baseball$/;"	m
Baseball	/code/orig/baseball/lib/baseball/game.rb	/^module Baseball$/;"	m
Baseball	/code/orig/baseball/lib/baseball/lineup.rb	/^module Baseball$/;"	m
Baseball	/code/orig/baseball/lib/baseball/player.rb	/^module Baseball$/;"	m
Baseball	/code/orig/baseball/lib/baseball/stats.rb	/^module Baseball$/;"	m
BaseballDay	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^  class BaseballDay < Day$/;"	c	class:EspnScores
BaseballGame	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^  class BaseballGame < Game$/;"	c	class:EspnScores
BaseballLottery	/code/orig/baseball_lottery/lib/baseball_lottery.rb	/^module BaseballLottery$/;"	m
BaseballLottery	/code/orig/baseball_lottery/lib/baseball_lottery/season_props.rb	/^module BaseballLottery$/;"	m
BaseballLottery	/code/orig/baseball_lottery/lib/baseball_lottery/sims.rb	/^module BaseballLottery$/;"	m
BaseballLottery	/code/orig/baseball_lottery/lib/baseball_lottery/stat_bet.rb	/^module BaseballLottery$/;"	m
BaseballLottery	/code/orig/baseball_lottery/lib/baseball_lottery/tasks.rb	/^module BaseballLottery$/;"	m
BaseballProjection	/code/orig/baseball_projection/lib/baseball_projection.rb	/^module BaseballProjection$/;"	m
BaseballProjection	/code/orig/baseball_projection/lib/baseball_projection/calced_stats_mod.rb	/^module BaseballProjection$/;"	m
BaseballProjection	/code/orig/baseball_projection/lib/baseball_projection/composite_projection.rb	/^module BaseballProjection$/;"	m
BaseballProjection	/code/orig/baseball_projection/lib/baseball_projection/pa_estimate.rb	/^module BaseballProjection$/;"	m
BaseballProjection	/code/orig/baseball_projection/lib/baseball_projection/randomized_projection.rb	/^module BaseballProjection$/;"	m
BaseballProjection	/code/orig/baseball_projection/lib/baseball_projection/samples.rb	/^module BaseballProjection$/;"	m
BaseballProjection	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^module BaseballProjection$/;"	m
BaseballProjection	/code/orig/baseball_projection/lib/baseball_projection/single_projection.rb	/^module BaseballProjection$/;"	m
BaseballProjection	/code/orig/baseball_projection/lib/baseball_projection/stat.rb	/^module BaseballProjection$/;"	m
BaseballProjection	/code/orig/baseball_projection/lib/baseball_projection/true_talent.rb	/^module BaseballProjection$/;"	m
Bases	/code/orig/baseball/lib/baseball/bases.rb	/^  class Bases$/;"	c	class:Baseball
BasketballDay	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^  class BasketballDay < Day$/;"	c	class:EspnScores
BasketballGame	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^  class BasketballGame < Game$/;"	c	class:EspnScores
Bet	/code/orig/baseball_lottery/lib/baseball_lottery.rb	/^  class Bet$/;"	c	class:Odds
Bet	/code/orig/odds/lib/odds/bet.rb	/^  class Bet$/;"	c	class:Odds
BetStore	/code/orig/bet_store/app/models/bet_store/game.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/app/models/bet_store/matched_sides.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/app/models/bet_store/question.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/app/models/bet_store/season.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/app/models/bet_store/side.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/app/models/bet_store/side_estimate.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/app/models/bet_store/source.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/app/models/bet_store/team.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/junk/app/models/bet_store/game.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/junk/app/models/bet_store/question.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/junk/app/models/bet_store/richer_field.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/junk/app/models/bet_store/side_estimate.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/junk/app/models/bet_store/source.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/lib/bet_store.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/lib/bet_store/engine.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/lib/bet_store/game.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/lib/bet_store/matched_sides.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/lib/bet_store/question.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/lib/bet_store/question_api.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/lib/bet_store/season.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/lib/bet_store/side.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/lib/bet_store/side_estimate.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/lib/bet_store/source.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/lib/bet_store/team.rb	/^module BetStore$/;"	m
BetStore	/code/orig/bet_store/lib/bet_store/util.rb	/^module BetStore$/;"	m
Calc	/code/orig/odds/lib/odds/algorithms/correlated_kelly.rb	/^      class Calc$/;"	c	class:Odds.Algorithms.CorrelatedKelly
CalcedStatsMod	/code/orig/baseball_projection/lib/baseball_projection/calced_stats_mod.rb	/^  module CalcedStatsMod$/;"	m	class:BaseballProjection
CaptureOut	/code/orig/project_group/vol/pipe_test.rb	/^class CaptureOut$/;"	c
CaptureOut	/code/orig/sim_back/vol/fork_test.rb	/^class CaptureOut$/;"	c
ClassMethods	/code/orig/bet_store/junk/app/models/bet_store/richer_field.rb	/^    module ClassMethods$/;"	m	class:BetStore.RicherField
ClassMethods	/code/orig/game_store/app/models/game_store/game_mod.rb	/^    module ClassMethods$/;"	m	class:GameStore.GameMod
ClassMethods	/code/orig/game_store/app/models/game_store/season_mod.rb	/^    module ClassMethods$/;"	m	class:GameStore.SeasonMod
ClassMethods	/code/orig/game_store/lib/game_store/game_mod.rb	/^    module ClassMethods$/;"	m	class:GameStore.GameMod
ClassMethods	/code/orig/game_store/lib/game_store/season_mod.rb	/^    module ClassMethods$/;"	m	class:GameStore.SeasonMod
ClassMethods	/code/orig/mongoid_gem_config/lib/mongoid_gem_config/rich_field.rb	/^    module ClassMethods$/;"	m	class:MongoidGemConfig.RichField
CollegeFootballDay	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^  class CollegeFootballDay < BaseFootballDay$/;"	c	class:EspnScores
CollegeFootballGame	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^  class CollegeFootballGame < FootballGame$/;"	c	class:EspnScores
CombinationParlay	/code/orig/odds/lib/odds/special/combination_parlay.rb	/^  class CombinationParlay$/;"	c	class:Odds
Command	/code/orig/project_group/lib/project_group/command.rb	/^  class Command$/;"	c	class:ProjectGroup
CompositeMongoConfig	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^class CompositeMongoConfig$/;"	c
CompositeProjection	/code/orig/baseball_projection/lib/baseball_projection/composite_projection.rb	/^  class CompositeProjection$/;"	c	class:BaseballProjection
Configs	/code/orig/project_group/lib/project_group/config.rb	/^  class Configs$/;"	c	class:ProjectGroup
Conn	/code/orig/baseball_lottery/vol/nested_inc.rb	/^class Conn$/;"	c
ConsolidateWorker	/code/orig/sim_back/lib/sim_back/consolidate_worker.rb	/^  class ConsolidateWorker$/;"	c	class:SimBack
ConsolidateWorker	/code/orig/sim_back/spec/support_ext/basic_imp.rb	/^  class ConsolidateWorker$/;"	c
Const	/code/orig/bet_store/app/models/bet_store/side.rb	/^    class Const < Base$/;"	c	class:BetStore.Side.Base
Const	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^    class Const < Base$/;"	c	class:BetStore.Side.Base
Const	/code/orig/bet_store/lib/bet_store/side.rb	/^    class Const < Base$/;"	c	class:BetStore.Side.Base
CorrelatedKelly	/code/orig/odds/lib/odds/algorithms/correlated_kelly.rb	/^    module CorrelatedKelly$/;"	m	class:Odds.Algorithms
DSLWrapper	/code/orig/project_group/lib/project_group/config.rb	/^  class DSLWrapper$/;"	c	class:ProjectGroup
Date	/code/orig/espn_scores/lib/espn_scores.rb	/^class Date$/;"	c
DateParse	/code/orig/espn_scores/lib/espn_scores/date_parse.rb	/^  class DateParse$/;"	c	class:EspnScores
Day	/code/orig/espn_scores/lib/espn_scores/day.rb	/^  class Day$/;"	c	class:EspnScores
Deps	/code/orig/project_group/vol/mock_deps.rb	/^class Deps$/;"	c
Engine	/code/orig/bet_store/lib/bet_store/engine.rb	/^  class Engine < Rails::Engine$/;"	c	class:BetStore
Engine	/code/orig/game_store/lib/game_store/engine.rb	/^  class Engine < Rails::Engine$/;"	c	class:GameStore
EnsuredWhere	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^  class EnsuredWhere$/;"	c	class:BaseballProjection
EspnScores	/code/orig/espn_scores/lib/espn_scores.rb	/^module EspnScores$/;"	m
EspnScores	/code/orig/espn_scores/lib/espn_scores/date_parse.rb	/^module EspnScores$/;"	m
EspnScores	/code/orig/espn_scores/lib/espn_scores/day.rb	/^module EspnScores$/;"	m
EspnScores	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^module EspnScores$/;"	m
EspnScores	/code/orig/espn_scores/lib/espn_scores/game.rb	/^module EspnScores$/;"	m
EspnScores	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^module EspnScores$/;"	m
EspnScores	/code/orig/espn_scores/lib/espn_scores/sport.rb	/^module EspnScores$/;"	m
EspnScores	/code/orig/espn_scores/lib/espn_scores/web.rb	/^module EspnScores$/;"	m
EspnScores	/code/orig/espn_scores/lib/espn_scores/week.rb	/^module EspnScores$/;"	m
Exact	/code/orig/bet_store/app/models/bet_store/question.rb	/^    class Exact < Base$/;"	c	class:BetStore.Question
Exact	/code/orig/bet_store/junk/app/models/bet_store/question.rb	/^    class Exact < Base$/;"	c	class:BetStore.Question
Exact	/code/orig/bet_store/lib/bet_store/question.rb	/^    class Exact < Base$/;"	c	class:BetStore.Question
ExpectedProfit	/code/orig/odds/lib/odds/bet.rb	/^    module ExpectedProfit$/;"	m	class:Odds.Bet
FakeRunner	/code/orig/sim_back/spec/support/fake_runner.rb	/^class FakeRunner$/;"	c
Float	/code/orig/baseball_projection/lib/baseball_projection.rb	/^class Float$/;"	c
FootballDay	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^  class FootballDay < BaseFootballDay$/;"	c	class:EspnScores
FootballGame	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^  class FootballGame < BaseFootballGame$/;"	c	class:EspnScores
Fun	/code/orig/project_group/lib/project_group.rb	/^class Fun$/;"	c
Game	/code/orig/baseball/lib/baseball/game.rb	/^  class Game$/;"	c	class:Baseball
Game	/code/orig/bet_store/app/models/bet_store/game.rb	/^  class Game$/;"	c	class:BetStore
Game	/code/orig/bet_store/junk/app/models/bet_store/game.rb	/^  class Game$/;"	c	class:BetStore
Game	/code/orig/bet_store/lib/bet_store/game.rb	/^  class Game$/;"	c	class:BetStore
Game	/code/orig/espn_scores/lib/espn_scores/game.rb	/^  class Game$/;"	c	class:EspnScores
Game	/code/orig/game_store/app/models/game_store/game.rb	/^  class Game$/;"	c	class:GameStore
Game	/code/orig/game_store/lib/game_store/game.rb	/^  class Game$/;"	c	class:GameStore
GameCreate	/code/orig/game_store/app/models/game_store/game_create.rb	/^  class GameCreate$/;"	c	class:GameStore
GameCreate	/code/orig/game_store/lib/game_store/game_create.rb	/^  class GameCreate$/;"	c	class:GameStore
GameDay	/code/orig/game_store/app/models/game_store/game_create.rb	/^  class GameDay$/;"	c	class:GameStore
GameDay	/code/orig/game_store/lib/game_store/game_create.rb	/^  class GameDay$/;"	c	class:GameStore
GameMod	/code/orig/game_store/app/models/game_store/game_mod.rb	/^  module GameMod$/;"	m	class:GameStore
GameMod	/code/orig/game_store/lib/game_store/game_mod.rb	/^  module GameMod$/;"	m	class:GameStore
GameProps	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/game_props.rb	/^  class GameProps$/;"	c	class:QuebecLottery
GameStats	/code/orig/baseball_lottery/lib/baseball_lottery/simback_setup.rb	/^  class GameStats$/;"	c	class:SimBack
GameStore	/code/orig/game_store/app/models/game_store/game.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/app/models/game_store/game_create.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/app/models/game_store/game_mod.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/app/models/game_store/league.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/app/models/game_store/season.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/app/models/game_store/season_mod.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/app/models/game_store/team.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/app/models/game_store/team_mod.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/lib/game_store.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/lib/game_store/engine.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/lib/game_store/game.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/lib/game_store/game_create.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/lib/game_store/game_mod.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/lib/game_store/league.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/lib/game_store/season.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/lib/game_store/season_mod.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/lib/game_store/team.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/lib/game_store/team_mod.rb	/^module GameStore$/;"	m
GameStore	/code/orig/game_store/lib/game_store/util.rb	/^module GameStore$/;"	m
Games	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/games.rb	/^  class Games$/;"	c	class:QuebecLottery
GeneticAlgorithm	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^class GeneticAlgorithm$/;"	c
Group	/code/orig/project_group/lib/project_group/group.rb	/^  class Group$/;"	c	class:ProjectGroup
GroupWrapper	/code/orig/project_group/lib/project_group/config.rb	/^  class GroupWrapper < DSLWrapper$/;"	c	class:ProjectGroup
Hash	/code/orig/baseball_projection/lib/baseball_projection/ext.rb	/^class Hash$/;"	c
Hash	/code/orig/bet_store/junk/deps.rb	/^class Hash$/;"	c
Hash	/code/orig/odds/lib/odds/ext/hash.rb	/^class Hash$/;"	c
Hash	/code/orig/odds/lib/odds/ext/math.rb	/^class Hash$/;"	c
HockeyDay	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^  class HockeyDay < Day$/;"	c	class:EspnScores
HockeyGame	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^  class HockeyGame < Game$/;"	c	class:EspnScores
InstanceMethods	/code/orig/bet_store/junk/app/models/bet_store/richer_field.rb	/^    module InstanceMethods$/;"	m	class:BetStore.RicherField
IntermediateSummaryWorker	/code/orig/baseball_lottery/spec/support_ext/summary_worker_reschedule.rb	/^  class IntermediateSummaryWorker$/;"	c	class:SimBack
IntermediateSummaryWorker	/code/orig/sim_back/lib/sim_back/summary_worker.rb	/^  class IntermediateSummaryWorker$/;"	c	class:SimBack
IntermediateSummaryWorker	/code/orig/sim_back/spec/support_ext/basic_imp.rb	/^  class IntermediateSummaryWorker$/;"	c	class:SimBack
Kelly	/code/orig/odds/lib/odds/algorithms/kelly.rb	/^    module Kelly$/;"	m	class:Odds.Algorithms
League	/code/orig/game_store/app/models/game_store/league.rb	/^  class League$/;"	c	class:GameStore
League	/code/orig/game_store/lib/game_store/league.rb	/^  class League$/;"	c	class:GameStore
Lines	/code/orig/odds/lib/odds/lines.rb	/^  class Lines$/;"	c	class:Odds
Lineup	/code/orig/baseball/lib/baseball/lineup.rb	/^  class Lineup$/;"	c	class:Baseball
LoadSims	/code/orig/odds/lib/odds/special/load_sims.rb	/^  class LoadSims$/;"	c	class:Odds
MakeInitial	/code/orig/project_group/spec/support/make_initial.rb	/^class MakeInitial$/;"	c
MalformedDateError	/code/orig/espn_scores/lib/espn_scores/date_parse.rb	/^  class MalformedDateError < RuntimeError$/;"	c	class:EspnScores
MatchedSides	/code/orig/bet_store/app/models/bet_store/matched_sides.rb	/^  class MatchedSides$/;"	c	class:BetStore
MatchedSides	/code/orig/bet_store/lib/bet_store/matched_sides.rb	/^  class MatchedSides$/;"	c	class:BetStore
MongoidGemConfig	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^module MongoidGemConfig$/;"	m
MongoidGemConfig	/code/orig/mongoid_gem_config/lib/mongoid_gem_config/rich_field.rb	/^module MongoidGemConfig$/;"	m
MyGem	/code/orig/project_group/vol/mock_deps.rb	/^class MyGem$/;"	c
MyLogger	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^class MyLogger$/;"	c
NullSide	/code/orig/bet_store/app/models/bet_store/matched_sides.rb	/^  class NullSide$/;"	c	class:BetStore
NullSide	/code/orig/bet_store/lib/bet_store/matched_sides.rb	/^  class NullSide$/;"	c	class:BetStore
NumberObj	/code/orig/sim_back/spec/support_ext/basic_imp.rb	/^  class NumberObj$/;"	c	class:SimBack
Numeric	/code/orig/odds/lib/odds/ext/numeric.rb	/^class Numeric$/;"	c
Numeric	/code/orig/odds/lib/odds/ext/string.rb	/^class Numeric$/;"	c
Object	/code/orig/baseball_projection/lib/baseball_projection.rb	/^class Object$/;"	c
Object	/code/orig/bet_store/junk/deps.rb	/^class Object$/;"	c
Object	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^class Object$/;"	c
Object	/code/orig/odds/lib/odds/ext/object.rb	/^class Object$/;"	c
Object	/code/orig/project_group/spec/config_spec.rb	/^class Object$/;"	c
Object	/code/orig/quebec_lottery/gem/lib/quebec_lottery.rb	/^class Object$/;"	c
Object	/code/orig/sim_back/lib/sim_back.rb	/^class Object$/;"	c
Odds	/code/orig/baseball_lottery/lib/baseball_lottery.rb	/^module Odds$/;"	m
Odds	/code/orig/bet_store/lib/bet_store/ext/odds_ext.rb	/^  class Odds$/;"	c	class:Odds
Odds	/code/orig/bet_store/lib/bet_store/ext/odds_ext.rb	/^module Odds$/;"	m
Odds	/code/orig/odds/lib/odds/algorithms/correlated_kelly.rb	/^module Odds$/;"	m
Odds	/code/orig/odds/lib/odds/algorithms/kelly.rb	/^module Odds$/;"	m
Odds	/code/orig/odds/lib/odds/algorithms/parlay_utility.rb	/^module Odds$/;"	m
Odds	/code/orig/odds/lib/odds/bet.rb	/^module Odds$/;"	m
Odds	/code/orig/odds/lib/odds/lines.rb	/^module Odds$/;"	m
Odds	/code/orig/odds/lib/odds/odds.rb	/^  class Odds$/;"	c	class:Odds
Odds	/code/orig/odds/lib/odds/odds.rb	/^module Odds$/;"	m
Odds	/code/orig/odds/lib/odds/parlay.rb	/^module Odds$/;"	m
Odds	/code/orig/odds/lib/odds/special/combination_parlay.rb	/^module Odds$/;"	m
Odds	/code/orig/odds/lib/odds/special/load_sims.rb	/^module Odds$/;"	m
OverUnder	/code/orig/baseball_lottery/lib/baseball_lottery/season_props.rb	/^    class OverUnder < Base$/;"	c	class:BaseballLottery.SeasonProp
OverUnder	/code/orig/bet_store/app/models/bet_store/question.rb	/^    class OverUnder < Base$/;"	c	class:BetStore.Question
OverUnder	/code/orig/bet_store/app/models/bet_store/question.rb	/^    class OverUnder::Player < OverUnder$/;"	c	class:BetStore.Question
OverUnder	/code/orig/bet_store/junk/app/models/bet_store/question.rb	/^    class OverUnder < Base$/;"	c	class:BetStore.Question
OverUnder	/code/orig/bet_store/junk/app/models/bet_store/question.rb	/^    class OverUnder::Player < OverUnder$/;"	c	class:BetStore.Question
OverUnder	/code/orig/bet_store/lib/bet_store/question.rb	/^    class OverUnder < Base$/;"	c	class:BetStore.Question
OverUnder	/code/orig/bet_store/lib/bet_store/question.rb	/^    class OverUnder::Player < OverUnder$/;"	c	class:BetStore.Question
PaEstimate	/code/orig/baseball_projection/lib/baseball_projection/pa_estimate.rb	/^  class PaEstimate$/;"	c	class:BaseballProjection
Page	/code/orig/quebec_lottery/gem/junk/cache.rb	/^  class Page$/;"	c	class:QuebecLottery
Pages	/code/orig/quebec_lottery/gem/lib/quebec_lottery/pages.rb	/^  class Pages$/;"	c	class:QuebecLottery
Parlay	/code/orig/odds/lib/odds/parlay.rb	/^  class Parlay$/;"	c	class:Odds
ParlayPercs	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^class ParlayPercs$/;"	c
ParlayUtility	/code/orig/odds/lib/odds/algorithms/parlay_utility.rb	/^    class ParlayUtility$/;"	c	class:Odds.Algorithms
Parser	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^  class Parser$/;"	c
Player	/code/orig/baseball/lib/baseball/player.rb	/^  class Player$/;"	c	class:Baseball
Player	/code/orig/bet_store/app/models/bet_store/side.rb	/^    class Player < Base$/;"	c	class:BetStore.Side.Base
Player	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^    class Player < Base$/;"	c	class:BetStore.Side.Base
Player	/code/orig/bet_store/lib/bet_store/side.rb	/^    class Player < Base$/;"	c	class:BetStore.Side.Base
Plugin	/code/orig/project_group/lib/project_group/plugin.rb	/^  class Plugin$/;"	c	class:ProjectGroup
Plugins	/code/orig/project_group/lib/project_group/plugin.rb	/^  class Plugins$/;"	c	class:ProjectGroup
ProjectGroup	/code/orig/project_group/lib/project_group.rb	/^module ProjectGroup$/;"	m
ProjectGroup	/code/orig/project_group/lib/project_group/command.rb	/^module ProjectGroup$/;"	m
ProjectGroup	/code/orig/project_group/lib/project_group/config.rb	/^module ProjectGroup$/;"	m
ProjectGroup	/code/orig/project_group/lib/project_group/group.rb	/^module ProjectGroup$/;"	m
ProjectGroup	/code/orig/project_group/lib/project_group/plugin.rb	/^module ProjectGroup$/;"	m
ProjectGroup	/code/orig/project_group/lib/project_group/repo.rb	/^module ProjectGroup$/;"	m
ProjectGroup	/code/orig/project_group/lib/project_group/run_tests.rb	/^module ProjectGroup$/;"	m
ProjectGroup	/code/orig/project_group/lib/project_group/single.rb	/^module ProjectGroup$/;"	m
ProjectGroup	/code/orig/project_group/lib/project_group/sublime_project.rb	/^module ProjectGroup$/;"	m
ProjectGroup	/code/orig/project_group/spec/support/ec.rb	/^module ProjectGroup$/;"	m
Projections	/code/orig/baseball_projection/lib/baseball_projection/single_projection.rb	/^  class Projections$/;"	c
Prop	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/prop.rb	/^  class Prop$/;"	c	class:QuebecLottery
PropLine	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/prop_line.rb	/^  class PropLine$/;"	c	class:QuebecLottery
QuebecLottery	/code/orig/quebec_lottery/gem/junk/cache.rb	/^module QuebecLottery$/;"	m
QuebecLottery	/code/orig/quebec_lottery/gem/lib/quebec_lottery.rb	/^module QuebecLottery$/;"	m
QuebecLottery	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/game_props.rb	/^module QuebecLottery$/;"	m
QuebecLottery	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/games.rb	/^module QuebecLottery$/;"	m
QuebecLottery	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/load.rb	/^module QuebecLottery$/;"	m
QuebecLottery	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/prop.rb	/^module QuebecLottery$/;"	m
QuebecLottery	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/prop_line.rb	/^module QuebecLottery$/;"	m
QuebecLottery	/code/orig/quebec_lottery/gem/lib/quebec_lottery/pages.rb	/^module QuebecLottery$/;"	m
QuebecLottery	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/save_prop.rb	/^module QuebecLottery$/;"	m
QuebecLottery	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^module QuebecLottery$/;"	m
QuebecLottery	/code/orig/quebec_lottery/gem/spec/support/samples.rb	/^module QuebecLottery$/;"	m
Question	/code/orig/bet_store/app/models/bet_store/question.rb	/^  module Question$/;"	m	class:BetStore
Question	/code/orig/bet_store/junk/app/models/bet_store/question.rb	/^  module Question$/;"	m	class:BetStore
Question	/code/orig/bet_store/lib/bet_store/question.rb	/^  module Question$/;"	m	class:BetStore
QuestionApi	/code/orig/bet_store/lib/bet_store/question_api.rb	/^  class QuestionApi$/;"	c	class:BetStore
Queue	/code/orig/sim_back/lib/sim_back/queue.rb	/^  class Queue$/;"	c	class:SimBack
RandomizedProjection	/code/orig/baseball_projection/lib/baseball_projection/randomized_projection.rb	/^  class RandomizedProjection$/;"	c	class:BaseballProjection
Range	/code/orig/odds/lib/odds/ext/rand.rb	/^class Range$/;"	c
Repo	/code/orig/project_group/lib/project_group/repo.rb	/^  class Repo$/;"	c	class:ProjectGroup
RichField	/code/orig/mongoid_gem_config/lib/mongoid_gem_config/rich_field.rb	/^  module RichField$/;"	m	class:MongoidGemConfig
RicherField	/code/orig/bet_store/junk/app/models/bet_store/richer_field.rb	/^  module RicherField$/;"	m	class:BetStore
RunTests	/code/orig/project_group/lib/project_group/run_tests.rb	/^  class RunTests$/;"	c	class:ProjectGroup
Safe	/code/orig/project_group/spec/config_spec.rb	/^class Safe$/;"	c
Samples	/code/orig/baseball_projection/lib/baseball_projection/samples.rb	/^  class Samples$/;"	c	class:BaseballProjection
SaveGameProp	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/load.rb	/^  class SaveGameProp$/;"	c	class:QuebecLottery
SaveProp	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/save_prop.rb	/^  class SaveProp$/;"	c	class:QuebecLottery
SavedProjection	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^  class SavedProjection$/;"	c	class:BaseballProjection
Scenario	/code/orig/odds/lib/odds/algorithms/parlay_utility.rb	/^      class Scenario$/;"	c	class:Odds.Algorithms.ParlayUtility
Season	/code/orig/bet_store/app/models/bet_store/season.rb	/^  class Season$/;"	c	class:BetStore
Season	/code/orig/bet_store/lib/bet_store/season.rb	/^  class Season$/;"	c	class:BetStore
Season	/code/orig/game_store/app/models/game_store/season.rb	/^  class Season$/;"	c	class:GameStore
Season	/code/orig/game_store/lib/game_store/season.rb	/^  class Season$/;"	c	class:GameStore
SeasonMod	/code/orig/game_store/app/models/game_store/season_mod.rb	/^  module SeasonMod$/;"	m	class:GameStore
SeasonMod	/code/orig/game_store/lib/game_store/season_mod.rb	/^  module SeasonMod$/;"	m	class:GameStore
SeasonProp	/code/orig/baseball_lottery/lib/baseball_lottery/season_props.rb	/^  module SeasonProp$/;"	m	class:BaseballLottery
SeasonProp	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^  class SeasonProp$/;"	c
SeasonProps	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^  class SeasonProps$/;"	c	class:QuebecLottery
Setup	/code/orig/project_group/vol/mock_deps.rb	/^class Setup$/;"	c
Side	/code/orig/bet_store/app/models/bet_store/side.rb	/^  module Side$/;"	m	class:BetStore
Side	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^  module Side$/;"	m	class:BetStore
Side	/code/orig/bet_store/lib/bet_store/side.rb	/^  module Side$/;"	m	class:BetStore
SideEstimate	/code/orig/bet_store/app/models/bet_store/side_estimate.rb	/^  class SideEstimate$/;"	c	class:BetStore
SideEstimate	/code/orig/bet_store/junk/app/models/bet_store/side_estimate.rb	/^  class SideEstimate$/;"	c	class:BetStore
SideEstimate	/code/orig/bet_store/lib/bet_store/side_estimate.rb	/^  class SideEstimate$/;"	c	class:BetStore
Sim	/code/orig/baseball_lottery/lib/baseball_lottery/simback_setup.rb	/^  class Sim$/;"	c	class:SimBack
Sim	/code/orig/odds/vol/parlays_as_horses.rb	/^class Sim$/;"	c
Sim	/code/orig/sim_back/lib/sim_back/sim.rb	/^  class Sim$/;"	c	class:SimBack
Sim	/code/orig/sim_back/spec/support_ext/basic_imp.rb	/^  class Sim$/;"	c	class:SimBack
SimBack	/code/orig/baseball_lottery/lib/baseball_lottery/simback_setup.rb	/^module SimBack$/;"	m
SimBack	/code/orig/baseball_lottery/spec/support_ext/summary_worker_reschedule.rb	/^module SimBack$/;"	m
SimBack	/code/orig/sim_back/lib/sim_back.rb	/^module SimBack$/;"	m
SimBack	/code/orig/sim_back/lib/sim_back/consolidate_worker.rb	/^module SimBack$/;"	m
SimBack	/code/orig/sim_back/lib/sim_back/queue.rb	/^module SimBack$/;"	m
SimBack	/code/orig/sim_back/lib/sim_back/sim.rb	/^module SimBack$/;"	m
SimBack	/code/orig/sim_back/lib/sim_back/sim_progress.rb	/^module SimBack$/;"	m
SimBack	/code/orig/sim_back/lib/sim_back/sims.rb	/^module SimBack$/;"	m
SimBack	/code/orig/sim_back/lib/sim_back/summary_worker.rb	/^module SimBack$/;"	m
SimBack	/code/orig/sim_back/lib/sim_back/util.rb	/^module SimBack$/;"	m
SimBack	/code/orig/sim_back/lib/sim_back/web/web.rb	/^module SimBack$/;"	m
SimBack	/code/orig/sim_back/lib/sim_back/worker.rb	/^module SimBack$/;"	m
SimBack	/code/orig/sim_back/spec/support_ext/basic_imp.rb	/^module SimBack$/;"	m
SimBack	/code/orig/sim_back/spec/support_ext/summary_worker_reschedule.rb	/^module SimBack$/;"	m
SimProgress	/code/orig/sim_back/lib/sim_back/sim_progress.rb	/^  class SimProgress$/;"	c	class:SimBack
Sims	/code/orig/baseball_lottery/lib/baseball_lottery/sims.rb	/^  class Sims$/;"	c
Sims	/code/orig/odds/vol/parlays_as_horses.rb	/^class Sims$/;"	c
Sims	/code/orig/sim_back/lib/sim_back/sims.rb	/^  class Sims$/;"	c	class:SimBack
Single	/code/orig/project_group/lib/project_group/run_tests.rb	/^    class Single$/;"	c	class:ProjectGroup.RunTests
Single	/code/orig/project_group/lib/project_group/single.rb	/^  class Single$/;"	c	class:ProjectGroup
SingleProjection	/code/orig/baseball_projection/lib/baseball_projection/single_projection.rb	/^  class SingleProjection$/;"	c	class:BaseballProjection
Source	/code/orig/bet_store/app/models/bet_store/source.rb	/^  class Source$/;"	c	class:BetStore
Source	/code/orig/bet_store/junk/app/models/bet_store/source.rb	/^  class Source$/;"	c	class:BetStore
Source	/code/orig/bet_store/lib/bet_store/source.rb	/^  class Source$/;"	c	class:BetStore
Spawn	/code/orig/project_group/vol/pipe_test.rb	/^class Spawn$/;"	c
Sport	/code/orig/espn_scores/lib/espn_scores/sport.rb	/^  class Sport$/;"	c	class:EspnScores
Stat	/code/orig/baseball_projection/lib/baseball_projection/stat.rb	/^  class Stat$/;"	c	class:BaseballProjection
StatBet	/code/orig/baseball_lottery/lib/baseball_lottery/stat_bet.rb	/^  class StatBet$/;"	c	class:BaseballLottery
Stats	/code/orig/baseball/lib/baseball/stats.rb	/^  class Stats$/;"	c	class:Baseball
String	/code/orig/odds/lib/odds/ext/to_odds.rb	/^class String$/;"	c
String	/code/orig/quebec_lottery/gem/lib/quebec_lottery.rb	/^class String$/;"	c
SublimeProject	/code/orig/project_group/lib/project_group/sublime_project.rb	/^  class SublimeProject$/;"	c	class:ProjectGroup
SummaryMod	/code/orig/sim_back/lib/sim_back/summary_worker.rb	/^  module SummaryMod$/;"	m	class:SimBack
SummaryObj	/code/orig/baseball_lottery/lib/baseball_lottery/simback_setup.rb	/^  class SummaryObj$/;"	c	class:SimBack
SummaryWorker	/code/orig/baseball_lottery/lib/baseball_lottery/simback_setup.rb	/^  class SummaryWorker$/;"	c	class:SimBack
SummaryWorker	/code/orig/baseball_lottery/spec/support_ext/summary_worker_reschedule.rb	/^  class SummaryWorker$/;"	c	class:SimBack
SummaryWorker	/code/orig/sim_back/lib/sim_back/summary_worker.rb	/^  class SummaryWorker$/;"	c	class:SimBack
SummaryWorker	/code/orig/sim_back/spec/support_ext/basic_imp.rb	/^  class SummaryWorker$/;"	c	class:SimBack
SummaryWorker	/code/orig/sim_back/spec/support_ext/summary_worker_reschedule.rb	/^  class SummaryWorker$/;"	c	class:SimBack
Team	/code/orig/bet_store/app/models/bet_store/side.rb	/^    class Team < Base$/;"	c	class:BetStore.Side.Base
Team	/code/orig/bet_store/app/models/bet_store/team.rb	/^  class Team$/;"	c	class:BetStore
Team	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^    class Team < Base$/;"	c	class:BetStore.Side.Base
Team	/code/orig/bet_store/lib/bet_store/side.rb	/^    class Team < Base$/;"	c	class:BetStore.Side.Base
Team	/code/orig/bet_store/lib/bet_store/team.rb	/^  class Team$/;"	c	class:BetStore
Team	/code/orig/game_store/app/models/game_store/team.rb	/^  class Team$/;"	c	class:GameStore
Team	/code/orig/game_store/lib/game_store/team.rb	/^  class Team$/;"	c	class:GameStore
TeamMod	/code/orig/game_store/app/models/game_store/team_mod.rb	/^  module TeamMod$/;"	m	class:GameStore
TeamMod	/code/orig/game_store/lib/game_store/team_mod.rb	/^  module TeamMod$/;"	m	class:GameStore
TrueTalent	/code/orig/baseball_projection/lib/baseball_projection/true_talent.rb	/^  class TrueTalent$/;"	c	class:BaseballProjection
TruthHash	/code/orig/baseball_lottery/lib/baseball_lottery/sims.rb	/^  class TruthHash$/;"	c	class:BaseballLottery
Vs	/code/orig/baseball_lottery/lib/baseball_lottery/season_props.rb	/^    class Vs < Base$/;"	c	class:BaseballLottery.SeasonProp
Vs	/code/orig/bet_store/app/models/bet_store/question.rb	/^    class Vs < Base$/;"	c	class:BetStore.Question
Vs	/code/orig/bet_store/junk/app/models/bet_store/question.rb	/^    class Vs < Base$/;"	c	class:BetStore.Question
Vs	/code/orig/bet_store/lib/bet_store/question.rb	/^    class Vs < Base$/;"	c	class:BetStore.Question
Web	/code/orig/espn_scores/lib/espn_scores/web.rb	/^  class Web < Sinatra::Base$/;"	c	class:EspnScores
Web	/code/orig/sim_back/lib/sim_back/web/web.rb	/^  class Web < Sinatra::Base$/;"	c	class:SimBack
Week	/code/orig/espn_scores/lib/espn_scores/week.rb	/^  class Week$/;"	c	class:EspnScores
Worker	/code/orig/sim_back/lib/sim_back/worker.rb	/^  class Worker$/;"	c
ab	/code/orig/baseball_projection/lib/baseball_projection/calced_stats_mod.rb	/^    def ab$/;"	f	class:BaseballProjection.CalcedStatsMod
abcxyz	/code/orig/project_group/lib/project_group.rb	/^  def abcxyz$/;"	f	class:Fun
abs_exp	/code/orig/odds/lib/odds/ext/numeric.rb	/^  def abs_exp(e)$/;"	f	class:Numeric
actual_profit	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^  def actual_profit$/;"	f	class:ParlayPercs
add	/code/orig/baseball/lib/baseball/bases.rb	/^    def add(player,player_bases)$/;"	f	class:Baseball.Bases
add	/code/orig/baseball/lib/baseball/stats.rb	/^    def add(player,stat,num)$/;"	f	class:Baseball.Stats
add	/code/orig/baseball_projection/lib/baseball_projection/stat.rb	/^      def add(name,ops={})$/;"	f	class:BaseballProjection.Stat
add	/code/orig/project_group/lib/project_group/plugin.rb	/^    def add(name,b,ops={})$/;"	f	class:ProjectGroup
add	/code/orig/project_group/lib/project_group/run_tests.rb	/^    def add(ops)$/;"	f	class:ProjectGroup.RunTests
add	/code/orig/quebec_lottery/gem/lib/quebec_lottery/pages.rb	/^    def add(name,urls)$/;"	f	class:QuebecLottery.Pages
add_prop	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    def add_prop(text)$/;"	f	class:Parser
add_to_parlay_comb_win_hash!	/code/orig/odds/vol/parlays_as_horses.rb	/^  def add_to_parlay_comb_win_hash!(sims)$/;"	f	class:Sims
adj_factor	/code/orig/odds/vol/parlays_as_horses.rb	/^  def adj_factor$/;"	f	class:Sim
advance!	/code/orig/baseball/lib/baseball/lineup.rb	/^    def advance!$/;"	f	class:Baseball.Lineup
all	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^    def all$/;"	f	class:BaseballProjection.EnsuredWhere
all	/code/orig/baseball_projection/lib/baseball_projection/single_projection.rb	/^      fattr(:all) { Projections.new }$/;"	r
all	/code/orig/baseball_projection/lib/baseball_projection/stat.rb	/^      fattr(:all) { {} }$/;"	r
all	/code/orig/espn_scores/lib/espn_scores/week.rb	/^      fattr(:all) { [] }$/;"	r
all_bets	/code/orig/baseball_lottery/lib/baseball_lottery/sims.rb	/^    def all_bets$/;"	f	class:Sims
all_combinations	/code/orig/odds/lib/odds/ext/math.rb	/^  def all_combinations(r=nil)$/;"	f	class:Array
all_combinations	/code/orig/odds/lib/odds/ext/math.rb	/^  def all_combinations(r=nil)$/;"	f	class:Hash
all_singles	/code/orig/project_group/lib/project_group/config.rb	/^    def all_singles$/;"	f	class:ProjectGroup
allzzz	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^    def allzzz$/;"	f	class:BaseballProjection.EnsuredWhere
as_json	/code/orig/espn_scores/lib/espn_scores/day.rb	/^    def as_json(*args)$/;"	f	class:EspnScores.Day
as_json	/code/orig/espn_scores/lib/espn_scores/game.rb	/^    def as_json(*args)$/;"	f	class:EspnScores.Game
as_json	/code/orig/project_group/lib/project_group/sublime_project.rb	/^    def as_json$/;"	f	class:ProjectGroup.SublimeProject
at_least	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^      def at_least(num,ops={})$/;"	f	class:BaseballProjection.SavedProjection
at_least	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^  def self.at_least(*args)$/;"	F
attrs	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/prop_line.rb	/^    def attrs$/;"	f	class:QuebecLottery.PropLine
attrs	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    def attrs$/;"	f	class:SeasonProp
avg	/code/orig/baseball_projection/lib/baseball_projection.rb	/^  def avg$/;"	f	class:Array
avg	/code/orig/baseball_projection/lib/baseball_projection/calced_stats_mod.rb	/^    def avg$/;"	f	class:BaseballProjection.CalcedStatsMod
away_name	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^    def away_name$/;"	f	class:EspnScores.BaseballGame
away_name	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^    def away_name$/;"	f	class:EspnScores.BasketballGame
away_name	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^    def away_name$/;"	f	class:EspnScores.FootballGame
away_name	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^    def away_name$/;"	f	class:EspnScores.HockeyGame
away_score	/code/orig/espn_scores/lib/espn_scores/game.rb	/^    def away_score$/;"	f	class:EspnScores.Game
away_score	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^    def away_score$/;"	f	class:EspnScores.HockeyGame
away_team	/code/orig/espn_scores/lib/espn_scores/game.rb	/^    def away_team$/;"	f	class:EspnScores.Game
away_team	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^    def away_team$/;"	f	class:EspnScores.HockeyGame
base	/code/orig/baseball_projection/spec/baseball_projection_spec.rb	/^  let(:base) { BP::SingleProjection.get_by_name('Miguel Cabrera') }$/;"	r
bases	/code/orig/baseball/lib/baseball/bases.rb	/^    fattr(:bases) do$/;"	r
bases	/code/orig/baseball/lib/baseball/game.rb	/^    fattr(:bases) do$/;"	r
belongs_to	/code/orig/mongoid_gem_config/lib/mongoid_gem_config/rich_field.rb	/^      def belongs_to(name,ops={})$/;"	f	class:MongoidGemConfig.RichField.ClassMethods
bet	/code/orig/odds/spec/algorithms/correlated_kelly_spec.rb	/^  def bet(win_chance,odds_factor)$/;"	f
bet	/code/orig/odds/spec/algorithms/kelly_spec.rb	/^  let(:bet) do$/;"	r
bet	/code/orig/odds/spec/lines_spec.rb	/^  def bet(odds)$/;"	f
bet_conds	/code/orig/baseball_lottery/lib/baseball_lottery/sims.rb	/^    def bet_conds(comb)$/;"	f	class:BaseballLottery.TruthHash
bet_string	/code/orig/odds/vol/parlays_as_horses.rb	/^  def bet_string$/;"	f	class:Sim
bets	/code/orig/baseball_lottery/lib/baseball_lottery/simback_setup.rb	/^    fattr(:bets) do$/;"	r
bets	/code/orig/baseball_lottery/lib/baseball_lottery/sims.rb	/^    fattr(:bets) do$/;"	r
bets	/code/orig/baseball_lottery/lib/baseball_lottery/stat_bet.rb	/^    def bets$/;"	f	class:BaseballLottery.StatBet
bets	/code/orig/baseball_lottery/spec/support/bets.rb	/^  let(:bets) do$/;"	r
bets	/code/orig/odds/lib/odds/lines.rb	/^    fattr(:bets) { [] }$/;"	r
bets	/code/orig/odds/lib/odds/parlay.rb	/^    fattr(:bets) { [] }$/;"	r
bets	/code/orig/odds/lib/odds/special/combination_parlay.rb	/^    fattr(:bets) { [] }$/;"	r
bets	/code/orig/odds/lib/odds/special/load_sims.rb	/^    fattr(:bets) do$/;"	r
bets	/code/orig/odds/spec/algorithms/correlated_kelly_spec.rb	/^  let(:bets) do$/;"	r
bets	/code/orig/odds/spec/lines_spec.rb	/^  let(:bets) do$/;"	r
bets	/code/orig/odds/spec/parlay_spec.rb	/^    let(:bets) do$/;"	r
bets	/code/orig/odds/spec/special/combination_parlay_spec.rb	/^  let(:bets) do$/;"	r
blank?	/code/orig/quebec_lottery/gem/lib/quebec_lottery.rb	/^  def blank?$/;"	f	class:Object
body	/code/orig/baseball_lottery/lib/baseball_lottery/simback_setup.rb	/^    def body(start_time)$/;"	f	class:SimBack.SummaryObj
bump_version	/code/orig/project_group/lib/project_group/command.rb	/^    def bump_version$/;"	f	class:ProjectGroup.Command
cached	/code/orig/baseball/lib/baseball/player.rb	/^      fattr(:cached) do$/;"	r
cached_until	/code/orig/espn_scores/lib/espn_scores/web.rb	/^      def cached_until$/;"	f	class:EspnScores.Web
calc!	/code/orig/baseball_projection/lib/baseball_projection/composite_projection.rb	/^    def calc!$/;"	f	class:BaseballProjection.CompositeProjection
calc_event	/code/orig/baseball/lib/baseball/player.rb	/^    def calc_event$/;"	f	class:Baseball.Player
calc_one	/code/orig/baseball_projection/lib/baseball_projection/true_talent.rb	/^    def calc_one$/;"	f	class:BaseballProjection.TrueTalent
calc_win_chance	/code/orig/baseball_lottery/lib/baseball_lottery/sims.rb	/^    def calc_win_chance(bets)$/;"	f	class:Sims
call	/code/orig/project_group/lib/project_group/plugin.rb	/^    def call(proj,ops)$/;"	f	class:ProjectGroup.Plugin
candidate	/code/orig/odds/lib/odds/algorithms/correlated_kelly.rb	/^        def candidate$/;"	f	class:Odds.Algorithms.CorrelatedKelly.Calc
cell_lines	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/prop.rb	/^    def cell_lines$/;"	f	class:QuebecLottery.Prop
changes?	/code/orig/project_group/lib/project_group/repo.rb	/^    def changes?$/;"	f	class:ProjectGroup.Repo
classes	/code/orig/sim_back/lib/sim_back/util.rb	/^    def classes$/;"	f	class:SimBack
clear!	/code/orig/baseball/lib/baseball/bases.rb	/^    def clear!$/;"	f	class:Baseball.Bases
clear_expected_win_chance!	/code/orig/baseball_lottery/lib/baseball_lottery/tasks.rb	/^    def clear_expected_win_chance!$/;"	f	class:BaseballLottery
client	/code/orig/baseball_lottery/vol/nested_inc.rb	/^  fattr(:client) { Mongo::MongoClient.new }$/;"	r
cmd	/code/orig/project_group/lib/project_group/repo.rb	/^    def cmd(str)$/;"	f	class:ProjectGroup.Repo
coll	/code/orig/baseball_lottery/vol/nested_inc.rb	/^  fattr(:coll) { db['inc_test'] }$/;"	r
columns	/code/orig/bet_store/app/models/bet_store/matched_sides.rb	/^    fattr(:columns) do$/;"	r
columns	/code/orig/bet_store/lib/bet_store/matched_sides.rb	/^    fattr(:columns) do$/;"	r
comb	/code/orig/odds/spec/special/combination_parlay_spec.rb	/^  let(:comb) do$/;"	r
combinations	/code/orig/baseball_lottery/lib/baseball_lottery/sims.rb	/^    def combinations(remaining=bets)$/;"	f	class:BaseballLottery.TruthHash
command	/code/orig/project_group/spec/command_spec.rb	/^    let(:command) do$/;"	r
command	/code/orig/project_group/spec/plugin_spec.rb	/^  let(:command) do$/;"	r
commit_dep_files!	/code/orig/project_group/lib/project_group/repo.rb	/^    def commit_dep_files!$/;"	f	class:ProjectGroup.Repo
completed_sims	/code/orig/sim_back/lib/sim_back/sim_progress.rb	/^    def completed_sims$/;"	f	class:SimBack.SimProgress
config	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^    fattr(:config) do$/;"	r
config	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^  fattr(:config) do$/;"	r
config	/code/orig/project_group/lib/project_group/command.rb	/^    def config$/;"	f	class:ProjectGroup.Command
config_for	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^  def config_for(g)$/;"	f	class:CompositeMongoConfig
configs	/code/orig/project_group/lib/project_group/command.rb	/^    fattr(:configs) do$/;"	r
configs	/code/orig/project_group/spec/support/config.rb	/^  let(:configs) do$/;"	r
connect!	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^    def connect!(env)$/;"	f	class:MongoidGemConfig
connect!	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^  def connect!(env)$/;"	f	class:CompositeMongoConfig
connect_to_mongo!	/code/orig/baseball_lottery/lib/baseball_lottery.rb	/^    def connect_to_mongo!(env)$/;"	f	class:BaseballLottery
connect_to_mongox!	/code/orig/baseball_lottery/lib/baseball_lottery.rb	/^    def connect_to_mongox!(env)$/;"	f	class:BaseballLottery
consolidate	/code/orig/sim_back/lib/sim_back/consolidate_worker.rb	/^    def consolidate(progress)$/;"	f	class:SimBack.ConsolidateWorker
consolidate_once	/code/orig/sim_back/lib/sim_back/consolidate_worker.rb	/^    def consolidate_once(progress)$/;"	f	class:SimBack.ConsolidateWorker
consolidate_once	/code/orig/sim_back/spec/support_ext/basic_imp.rb	/^    def consolidate_once(progress)$/;"	f	class:ConsolidateWorker
contains?	/code/orig/espn_scores/lib/espn_scores/week.rb	/^    def contains?(date)$/;"	f	class:EspnScores.Week
count	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^    def count(ops)$/;"	f	class:BaseballProjection.EnsuredWhere
count	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/games.rb	/^    def count$/;"	f	class:QuebecLottery.Games
count_gt	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^    def count_gt(ops)$/;"	f	class:BaseballProjection.EnsuredWhere
count_lt	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^    def count_lt(ops)$/;"	f	class:BaseballProjection.EnsuredWhere
create	/code/orig/project_group/spec/support/make_initial.rb	/^  def create(file,body="abc")$/;"	f
create!	/code/orig/baseball_projection/lib/baseball_projection/randomized_projection.rb	/^    def create!$/;"	f	class:BaseballProjection.RandomizedProjection
create!	/code/orig/game_store/app/models/game_store/game_create.rb	/^    def create!$/;"	f	class:GameStore.GameCreate
create!	/code/orig/game_store/lib/game_store/game_create.rb	/^    def create!$/;"	f	class:GameStore.GameCreate
create!	/code/orig/odds/vol/parlays_as_horses.rb	/^  def create!$/;"	f	class:Sims
create_one!	/code/orig/baseball_projection/lib/baseball_projection/randomized_projection.rb	/^    def create_one!(stat)$/;"	f	class:BaseballProjection.RandomizedProjection
current?	/code/orig/espn_scores/lib/espn_scores/date_parse.rb	/^      def current?(ops)$/;"	f	class:EspnScores.DateParse
current?	/code/orig/espn_scores/lib/espn_scores/week.rb	/^      def current?(ops)$/;"	f	class:EspnScores.Week
current?	/code/orig/espn_scores/lib/espn_scores/week.rb	/^    def current?$/;"	f	class:EspnScores.Week
current?	/code/orig/project_group/lib/project_group/repo.rb	/^    def current?$/;"	f	class:ProjectGroup.Repo
current_player	/code/orig/baseball/lib/baseball/lineup.rb	/^    def current_player$/;"	f	class:Baseball.Lineup
cycle	/code/orig/project_group/lib/project_group/command.rb	/^    def cycle$/;"	f	class:ProjectGroup.Command
date	/code/orig/espn_scores/lib/espn_scores/date_parse.rb	/^    fattr(:date) do$/;"	r
date	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/game_props.rb	/^    fattr(:date) do$/;"	r
date_for_week	/code/orig/espn_scores/lib/espn_scores/week.rb	/^      def date_for_week(ops)$/;"	f	class:EspnScores.Week
date_method	/code/orig/espn_scores/lib/espn_scores/day.rb	/^      def date_method$/;"	f	class:EspnScores.Day
date_method	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^    def self.date_method$/;"	F	class:EspnScores.BaseFootballDay
date_normal	/code/orig/espn_scores/lib/espn_scores/date_parse.rb	/^    def date_normal$/;"	f	class:EspnScores.DateParse
date_or_week	/code/orig/espn_scores/lib/espn_scores/web.rb	/^      def date_or_week$/;"	f	class:EspnScores.Web
date_week	/code/orig/espn_scores/lib/espn_scores/date_parse.rb	/^    def date_week$/;"	f	class:EspnScores.DateParse
day	/code/orig/espn_scores/lib/espn_scores/web.rb	/^      fattr(:day) do$/;"	r
day	/code/orig/espn_scores/spec/basketball_spec.rb	/^    let(:day) do$/;"	r
day	/code/orig/espn_scores/spec/college_football_spec.rb	/^    let(:day) do$/;"	r
day	/code/orig/espn_scores/spec/espn_scores_spec.rb	/^    let(:day) do$/;"	r
day	/code/orig/espn_scores/spec/football_spec.rb	/^    let(:day) do$/;"	r
day	/code/orig/espn_scores/spec/hockey_spec.rb	/^    let(:day) do$/;"	r
db	/code/orig/baseball_lottery/vol/nested_inc.rb	/^  fattr(:db) { client['inc_test'] }$/;"	r
delete_all!	/code/orig/sim_back/lib/sim_back/util.rb	/^    def delete_all!$/;"	f	class:SimBack
delete_jobs!	/code/orig/sim_back/lib/sim_back/util.rb	/^    def delete_jobs!$/;"	f	class:SimBack
demongoize	/code/orig/bet_store/lib/bet_store/ext/odds_ext.rb	/^      def demongoize(object)$/;"	f	class:Odds.Odds
dep	/code/orig/project_group/vol/mock_deps.rb	/^  def dep(parent,child=nil)$/;"	f	class:Deps
deps	/code/orig/project_group/vol/mock_deps.rb	/^  fattr(:deps) do$/;"	r
deps_for	/code/orig/bet_store/junk/deps.rb	/^def deps_for(dir)$/;"	f
desc	/code/orig/game_store/app/models/game_store/game_mod.rb	/^    def desc$/;"	f	class:GameStore.GameMod
desc	/code/orig/game_store/app/models/game_store/season_mod.rb	/^    def desc$/;"	f	class:GameStore.SeasonMod
desc	/code/orig/game_store/lib/game_store/game_mod.rb	/^    def desc$/;"	f	class:GameStore.GameMod
desc	/code/orig/game_store/lib/game_store/season_mod.rb	/^    def desc$/;"	f	class:GameStore.SeasonMod
desc	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/game_props.rb	/^    def desc$/;"	f	class:QuebecLottery.GameProps
destroy_all!	/code/orig/bet_store/lib/bet_store/util.rb	/^    def destroy_all!$/;"	f	class:BetStore
destroy_all!	/code/orig/game_store/lib/game_store/util.rb	/^    def destroy_all!$/;"	f	class:GameStore
dir	/code/orig/project_group/lib/project_group/command.rb	/^    fattr(:dir) do$/;"	r
dir	/code/orig/project_group/lib/project_group/config.rb	/^    fattr(:dir) do$/;"	r
doc	/code/orig/espn_scores/lib/espn_scores/day.rb	/^    fattr(:doc) do$/;"	r
doc	/code/orig/espn_scores/lib/espn_scores/game.rb	/^    fattr(:doc) do$/;"	r
doc	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/game_props.rb	/^    fattr(:doc) do$/;"	r
doc	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/games.rb	/^    fattr(:doc) do$/;"	r
doc	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    fattr(:doc) do$/;"	r
each	/code/orig/bet_store/app/models/bet_store/matched_sides.rb	/^    def each(&b)$/;"	f	class:BetStore.MatchedSides
each	/code/orig/bet_store/lib/bet_store/matched_sides.rb	/^    def each(&b)$/;"	f	class:BetStore.MatchedSides
each	/code/orig/odds/lib/odds/lines.rb	/^    def each(&b)$/;"	f	class:Odds.Lines
each_chunk_size	/code/orig/sim_back/lib/sim_back/queue.rb	/^      def each_chunk_size(num_sims)$/;"	f	class:SimBack.Queue
each_sorted_by_value_desc	/code/orig/odds/lib/odds/ext/hash.rb	/^  def each_sorted_by_value_desc(&b)$/;"	f	class:Hash
ec	/code/orig/project_group/lib/project_group.rb	/^    def ec(cmd)$/;"	f	class:ProjectGroup
ec	/code/orig/project_group/spec/support/ec.rb	/^    def ec(cmd)$/;"	f	class:ProjectGroup
ec	/code/orig/project_group/spec/support/make_initial.rb	/^  def ec(cmd)$/;"	f	class:MakeInitial
eci	/code/orig/project_group/lib/project_group/single.rb	/^    def eci(cmd,ops={})$/;"	f	class:ProjectGroup.Single
elements	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    fattr(:elements) do$/;"	r
ensure_base_data!	/code/orig/game_store/lib/game_store/util.rb	/^    def ensure_base_data!$/;"	f	class:GameStore
ensure_dep_files!	/code/orig/project_group/lib/project_group/repo.rb	/^    def ensure_dep_files!$/;"	f	class:ProjectGroup.Repo
ensured_count	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^      def ensured_count(num,ensure_ops,where_ops)$/;"	f	class:BaseballProjection.SavedProjection
estimate	/code/orig/baseball_projection/spec/pa_estimate_spec.rb	/^  def estimate$/;"	f
etag_name	/code/orig/espn_scores/lib/espn_scores/web.rb	/^      def etag_name$/;"	f	class:EspnScores.Web
evolve	/code/orig/bet_store/lib/bet_store/ext/odds_ext.rb	/^      def evolve(object)$/;"	f	class:Odds.Odds
expected_profit	/code/orig/bet_store/app/models/bet_store/side.rb	/^      def expected_profit$/;"	f	class:BetStore.Side.Base
expected_profit	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^      def expected_profit$/;"	f	class:BetStore.Side.Base
expected_profit	/code/orig/bet_store/lib/bet_store/side.rb	/^      def expected_profit$/;"	f	class:BetStore.Side.Base
expected_profit	/code/orig/odds/lib/odds/bet.rb	/^      def expected_profit$/;"	f	class:Odds.Bet.ExpectedProfit
expected_win_chance	/code/orig/bet_store/app/models/bet_store/side.rb	/^      def expected_win_chance$/;"	f	class:BetStore.Side.Base
expected_win_chance	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^      def expected_win_chance$/;"	f	class:BetStore.Side.Base
expected_win_chance	/code/orig/bet_store/lib/bet_store/side.rb	/^      def expected_win_chance$/;"	f	class:BetStore.Side.Base
expected_win_chance=	/code/orig/bet_store/app/models/bet_store/side.rb	/^      def expected_win_chance=(wc)$/;"	f	class:BetStore.Side.Base
expected_win_chance=	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^      def expected_win_chance=(wc)$/;"	f	class:BetStore.Side.Base
expected_win_chance=	/code/orig/bet_store/lib/bet_store/side.rb	/^      def expected_win_chance=(wc)$/;"	f	class:BetStore.Side.Base
expires_in	/code/orig/espn_scores/lib/espn_scores/web.rb	/^      def expires_in$/;"	f	class:EspnScores.Web
fake	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^def fake$/;"	f
field	/code/orig/mongoid_gem_config/lib/mongoid_gem_config/rich_field.rb	/^      def field(name,ops={})$/;"	f	class:MongoidGemConfig.RichField.ClassMethods
file	/code/orig/sim_back/vol/fork_test.rb	/^  fattr(:file) do$/;"	r
filename	/code/orig/sim_back/vol/fork_test.rb	/^  fattr(:filename) do$/;"	r
fill_zeroes!	/code/orig/baseball_lottery/lib/baseball_lottery/simback_setup.rb	/^    def fill_zeroes!$/;"	f	class:SimBack.GameStats
find_one_object	/code/orig/sim_back/lib/sim_back/sim_progress.rb	/^    def self.find_one_object(id)$/;"	F	class:SimBack.SimProgress
find_or_create!	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^  def find_or_create!(ops)$/;"	f	class:Object
first_only	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^  def first_only(ops=nil)$/;"	f	class:Object
fitness	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^  def fitness$/;"	f	class:ParlayPercs
fix_nickname	/code/orig/game_store/app/models/game_store/game_create.rb	/^    def fix_nickname(name)$/;"	f	class:GameStore.GameCreate
fix_nickname	/code/orig/game_store/lib/game_store/game_create.rb	/^    def fix_nickname(name)$/;"	f	class:GameStore.GameCreate
fixed_prop	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    def fixed_prop$/;"	f	class:SeasonProp
for	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/save_prop.rb	/^      def for(props)$/;"	f	class:QuebecLottery.SaveProp
for_game	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/load.rb	/^      def for_game(game)$/;"	f	class:QuebecLottery.SaveGameProp
for_games	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/load.rb	/^      def for_games(games)$/;"	f	class:QuebecLottery.SaveGameProp
format	/code/orig/espn_scores/lib/espn_scores/web.rb	/^      def format$/;"	f	class:EspnScores.Web
from_decimal_odds	/code/orig/odds/lib/odds/odds.rb	/^      def from_decimal_odds(num)$/;"	f	class:Odds
from_real	/code/orig/baseball/lib/baseball/player.rb	/^      def from_real(first,last,year)$/;"	f	class:Baseball.Player
from_string	/code/orig/odds/lib/odds/odds.rb	/^      def from_string(str)$/;"	f	class:Odds
from_win_amount_with_principal	/code/orig/odds/lib/odds/odds.rb	/^      def from_win_amount_with_principal(num)$/;"	f	class:Odds
from_win_amount_without_principal	/code/orig/odds/lib/odds/odds.rb	/^      def from_win_amount_without_principal(num)$/;"	f	class:Odds
full_command	/code/orig/project_group/lib/project_group/run_tests.rb	/^      def full_command$/;"	f	class:ProjectGroup.RunTests.Single
game	/code/orig/baseball_lottery/lib/baseball_lottery/simback_setup.rb	/^    fattr(:game) do$/;"	r
game	/code/orig/bet_store/spec/question/over_under_spec.rb	/^    let(:game) { BetStore::Game.first }$/;"	r
game	/code/orig/espn_scores/spec/espn_scores_spec.rb	/^    let(:game) do$/;"	r
game	/code/orig/game_store/app/models/game_store/game_create.rb	/^    fattr(:game) do$/;"	r
game	/code/orig/game_store/lib/game_store/game_create.rb	/^    fattr(:game) do$/;"	r
game	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/load.rb	/^    fattr(:game) do$/;"	r
game	/code/orig/quebec_lottery/gem/spec/game/hockey_game_spec.rb	/^  let(:game) do$/;"	r
game_class	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^    def game_class$/;"	f	class:EspnScores.BaseballDay
game_class	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^    def game_class$/;"	f	class:EspnScores.BasketballDay
game_class	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^    def game_class$/;"	f	class:EspnScores.CollegeFootballDay
game_class	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^    def game_class$/;"	f	class:EspnScores.FootballDay
game_class	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^    def game_class$/;"	f	class:EspnScores.HockeyDay
game_or_season_stat_vs	/code/orig/bet_store/lib/bet_store/question_api.rb	/^      def game_or_season_stat_vs(ops)$/;"	f	class:BetStore.QuestionApi
game_player_stat_over_under	/code/orig/bet_store/lib/bet_store/question_api.rb	/^      def game_player_stat_over_under(ops)$/;"	f	class:BetStore.QuestionApi
game_spread	/code/orig/bet_store/lib/bet_store/question_api.rb	/^      def game_spread(ops)$/;"	f	class:BetStore.QuestionApi
game_stat_vs	/code/orig/bet_store/lib/bet_store/question_api.rb	/^      def game_stat_vs(ops)$/;"	f	class:BetStore.QuestionApi
games	/code/orig/espn_scores/lib/espn_scores/day.rb	/^    fattr(:games) do$/;"	r
games	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/games.rb	/^    fattr(:games) do$/;"	r
games	/code/orig/quebec_lottery/gem/spec/game/games_spec.rb	/^  let(:games) do$/;"	r
gem_stuff	/code/orig/project_group/lib/project_group/command.rb	/^    def gem_stuff$/;"	f	class:ProjectGroup.Command
gems	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^  fattr(:gems) do$/;"	r
gems	/code/orig/project_group/vol/mock_deps.rb	/^  fattr(:gems) do$/;"	r
gemspec	/code/orig/project_group/lib/project_group/command.rb	/^    def gemspec$/;"	f	class:ProjectGroup.Command
generations	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^  def generations$/;"	f	class:GeneticAlgorithm
get	/code/orig/baseball/lib/baseball/stats.rb	/^    def get(name,stat)$/;"	f	class:Baseball.Stats
get	/code/orig/baseball_projection/lib/baseball_projection/pa_estimate.rb	/^    def get$/;"	f	class:BaseballProjection.PaEstimate
get	/code/orig/baseball_projection/lib/baseball_projection/single_projection.rb	/^      def get(player_id)$/;"	f	class:BaseballProjection.SingleProjection
get	/code/orig/baseball_projection/lib/baseball_projection/stat.rb	/^      def get(k)$/;"	f	class:BaseballProjection.Stat
get	/code/orig/bet_store/app/models/bet_store/question.rb	/^        def get(ops)$/;"	f	class:BetStore.Question.Base
get	/code/orig/bet_store/app/models/bet_store/source.rb	/^      def get(name)$/;"	f	class:BetStore.Source
get	/code/orig/bet_store/junk/app/models/bet_store/question.rb	/^        def get(ops)$/;"	f	class:BetStore.Question.Base
get	/code/orig/bet_store/junk/app/models/bet_store/source.rb	/^      def get(name)$/;"	f	class:BetStore.Source
get	/code/orig/bet_store/lib/bet_store/question.rb	/^        def get(ops)$/;"	f	class:BetStore.Question.Base
get	/code/orig/bet_store/lib/bet_store/source.rb	/^      def get(name)$/;"	f	class:BetStore.Source
get	/code/orig/espn_scores/lib/espn_scores/day.rb	/^      def get(sport, date)$/;"	f	class:EspnScores.Day
get	/code/orig/espn_scores/lib/espn_scores/sport.rb	/^      def get(sport)$/;"	f	class:EspnScores.Sport
get	/code/orig/game_store/app/models/game_store/game_mod.rb	/^      def get(ops)$/;"	f	class:GameStore.GameMod.ClassMethods
get	/code/orig/game_store/app/models/game_store/league.rb	/^      def get(name)$/;"	f	class:GameStore.League
get	/code/orig/game_store/app/models/game_store/season_mod.rb	/^      def get(league_name,year)$/;"	f	class:GameStore.SeasonMod.ClassMethods
get	/code/orig/game_store/lib/game_store/game_mod.rb	/^      def get(ops)$/;"	f	class:GameStore.GameMod.ClassMethods
get	/code/orig/game_store/lib/game_store/league.rb	/^      def get(name)$/;"	f	class:GameStore.League
get	/code/orig/game_store/lib/game_store/season_mod.rb	/^      def get(league_name,year)$/;"	f	class:GameStore.SeasonMod.ClassMethods
get	/code/orig/project_group/lib/project_group/plugin.rb	/^    def get(cmd)$/;"	f	class:ProjectGroup
get	/code/orig/quebec_lottery/gem/junk/cache.rb	/^      def get(url)$/;"	f	class:QuebecLottery.Page
get	/code/orig/quebec_lottery/gem/lib/quebec_lottery/pages.rb	/^    def get(name,ops={})$/;"	f	class:QuebecLottery.Pages
get_by_name	/code/orig/baseball_projection/lib/baseball_projection/single_projection.rb	/^      def get_by_name(name)$/;"	f	class:BaseballProjection.SingleProjection
get_class	/code/orig/espn_scores/lib/espn_scores/day.rb	/^      def get_class(sport)$/;"	f	class:EspnScores.Day
get_group	/code/orig/project_group/lib/project_group/config.rb	/^      def get_group(name)$/;"	f	class:ProjectGroup
get_page	/code/orig/espn_scores/lib/espn_scores.rb	/^    def get_page(url)$/;"	f	class:EspnScores
git	/code/orig/project_group/lib/project_group/command.rb	/^    def git$/;"	f	class:ProjectGroup.Command
git	/code/orig/project_group/lib/project_group/repo.rb	/^    def git(*args)$/;"	f	class:ProjectGroup.Repo
git	/code/orig/project_group/spec/support/make_initial.rb	/^  def git(cmd)$/;"	f	class:MakeInitial
git_full	/code/orig/project_group/lib/project_group/command.rb	/^    def git_full$/;"	f	class:ProjectGroup.Command
git_full_single	/code/orig/project_group/lib/project_group/command.rb	/^    def git_full_single(proj)$/;"	f	class:ProjectGroup.Command
good	/code/orig/baseball_projection/lib/baseball_projection/stat.rb	/^    fattr(:good) { true }$/;"	r
group	/code/orig/project_group/lib/project_group/command.rb	/^    fattr(:group) do$/;"	r
group	/code/orig/project_group/lib/project_group/config.rb	/^      def group(name,&b)$/;"	f	class:ProjectGroup
group	/code/orig/project_group/lib/project_group/config.rb	/^    def group(name,&b)$/;"	f	class:ProjectGroup
group	/code/orig/project_group/spec/group_spec.rb	/^    let(:group) do$/;"	r
group	/code/orig/project_group/spec/sublime_project_spec.rb	/^  let(:group) do$/;"	r
group	/code/orig/project_group/spec/support/config.rb	/^  let(:group) do$/;"	r
group	/code/orig/project_group/spec/support/make_initial.rb	/^  let(:group) do$/;"	r
group	/code/orig/project_group/vol/mock_deps.rb	/^  fattr(:group) do$/;"	r
group_for_dir	/code/orig/project_group/lib/project_group/config.rb	/^    def group_for_dir(dir)$/;"	f	class:ProjectGroup
grouping_key	/code/orig/bet_store/app/models/bet_store/question.rb	/^      def grouping_key$/;"	f	class:BetStore.Question.OverUnder
grouping_key	/code/orig/bet_store/app/models/bet_store/question.rb	/^      def grouping_key$/;"	f	class:BetStore.Question.Vs
grouping_key	/code/orig/bet_store/app/models/bet_store/side.rb	/^      def grouping_key$/;"	f	class:BetStore.Side.Base
grouping_key	/code/orig/bet_store/junk/app/models/bet_store/question.rb	/^      def grouping_key$/;"	f	class:BetStore.Question.OverUnder
grouping_key	/code/orig/bet_store/junk/app/models/bet_store/question.rb	/^      def grouping_key$/;"	f	class:BetStore.Question.Vs
grouping_key	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^      def grouping_key$/;"	f	class:BetStore.Side.Base
grouping_key	/code/orig/bet_store/lib/bet_store/question.rb	/^      def grouping_key$/;"	f	class:BetStore.Question.OverUnder
grouping_key	/code/orig/bet_store/lib/bet_store/question.rb	/^      def grouping_key$/;"	f	class:BetStore.Question.Vs
grouping_key	/code/orig/bet_store/lib/bet_store/side.rb	/^      def grouping_key$/;"	f	class:BetStore.Side.Base
groups	/code/orig/project_group/lib/project_group/config.rb	/^    fattr(:groups) do$/;"	r
h	/code/orig/baseball_projection/lib/baseball_projection/calced_stats_mod.rb	/^    def h$/;"	f	class:BaseballProjection.CalcedStatsMod
handle	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    def handle(el)$/;"	f	class:Parser
has?	/code/orig/project_group/lib/project_group/plugin.rb	/^    def has?(cmd)$/;"	f	class:ProjectGroup
has_many	/code/orig/mongoid_gem_config/lib/mongoid_gem_config/rich_field.rb	/^      def has_many(name,ops={})$/;"	f	class:MongoidGemConfig.RichField.ClassMethods
hbp	/code/orig/baseball_projection/lib/baseball_projection/calced_stats_mod.rb	/^    def hbp$/;"	f	class:BaseballProjection.CalcedStatsMod
home_score	/code/orig/espn_scores/lib/espn_scores/game.rb	/^    def home_score$/;"	f	class:EspnScores.Game
home_score	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^    def home_score$/;"	f	class:EspnScores.HockeyGame
home_team	/code/orig/espn_scores/lib/espn_scores/game.rb	/^    def home_team$/;"	f	class:EspnScores.Game
home_team	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^    def home_team$/;"	f	class:EspnScores.HockeyGame
html	/code/orig/espn_scores/lib/espn_scores/day.rb	/^    fattr(:html) do$/;"	r
id	/code/orig/espn_scores/lib/espn_scores/game.rb	/^    def id$/;"	f	class:EspnScores.Game
id	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^    def id$/;"	f	class:EspnScores.BaseFootballGame
included	/code/orig/bet_store/junk/app/models/bet_store/richer_field.rb	/^    def self.included(mod)$/;"	F	class:BetStore.RicherField
included	/code/orig/mongoid_gem_config/lib/mongoid_gem_config/rich_field.rb	/^    def self.included(mod)$/;"	F	class:MongoidGemConfig.RichField
info	/code/orig/project_group/lib/project_group/command.rb	/^    def info$/;"	f	class:ProjectGroup.Command
initialize	/code/orig/espn_scores/lib/espn_scores/date_parse.rb	/^    def initialize(ops={})$/;"	f	class:EspnScores.DateParse
initialize	/code/orig/odds/lib/odds/algorithms/correlated_kelly.rb	/^        def initialize(bets)$/;"	f	class:Odds.Algorithms.CorrelatedKelly.Calc
initialize	/code/orig/odds/lib/odds/odds.rb	/^    def initialize(arg)$/;"	f	class:Odds.Odds
initialize	/code/orig/project_group/lib/project_group/config.rb	/^    def initialize(obj)$/;"	f	class:ProjectGroup.DSLWrapper
injuries	/code/orig/baseball_projection/lib/baseball_projection/pa_estimate.rb	/^      fattr(:injuries) do$/;"	r
inning	/code/orig/baseball/lib/baseball/game.rb	/^    fattr(:inning) do$/;"	r
instance	/code/orig/project_group/lib/project_group/config.rb	/^      fattr(:instance) { new }$/;"	r
instance	/code/orig/project_group/lib/project_group/plugin.rb	/^      fattr(:instance) { new }$/;"	r
instance	/code/orig/quebec_lottery/gem/lib/quebec_lottery/pages.rb	/^      fattr(:instance) { new }$/;"	r
inverse	/code/orig/odds/lib/odds/odds.rb	/^    def inverse$/;"	f	class:Odds
jobs?	/code/orig/sim_back/spec/support/fake_runner.rb	/^  def jobs?$/;"	f	class:FakeRunner
kelly	/code/orig/odds/lib/odds/algorithms/kelly.rb	/^      def kelly$/;"	f	class:Odds.Algorithms.Kelly
kelly	/code/orig/odds/spec/algorithms/correlated_kelly_spec.rb	/^  let(:kelly) do$/;"	r
kelly_sim	/code/orig/odds/vol/kelly_sim.rb	/^def kelly_sim(perc)$/;"	f
klass	/code/orig/baseball_projection/lib/baseball_projection.rb	/^  def klass$/;"	f	class:Object
klass	/code/orig/odds/lib/odds/ext/object.rb	/^  def klass$/;"	f	class:Object
klass	/code/orig/sim_back/lib/sim_back.rb	/^  def klass$/;"	f	class:Object
last_name	/code/orig/baseball_lottery/lib/baseball_lottery/stat_bet.rb	/^    def last_name$/;"	f	class:BaseballLottery.StatBet
league	/code/orig/bet_store/spec/question/over_under_spec.rb	/^      let(:league) { GameStore::League.get('MLB') }$/;"	r
league	/code/orig/game_store/app/models/game_store/game_create.rb	/^    fattr(:league) do$/;"	r
league	/code/orig/game_store/lib/game_store/game_create.rb	/^    fattr(:league) do$/;"	r
league_name=	/code/orig/game_store/app/models/game_store/team_mod.rb	/^    def league_name=(n)$/;"	f	class:GameStore.TeamMod
league_name=	/code/orig/game_store/lib/game_store/team_mod.rb	/^    def league_name=(n)$/;"	f	class:GameStore.TeamMod
line	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    def line$/;"	f	class:SeasonProp
lines	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/game_props.rb	/^    def lines$/;"	f	class:QuebecLottery.GameProps
lines	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/prop.rb	/^    def lines$/;"	f	class:QuebecLottery
lines=	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/prop_line.rb	/^    def lines=(arr)$/;"	f	class:QuebecLottery.PropLine
lineup	/code/orig/baseball/lib/baseball/game.rb	/^    fattr(:lineup) do$/;"	r
list	/code/orig/project_group/lib/project_group/command.rb	/^    def list$/;"	f	class:ProjectGroup.Command
list	/code/orig/project_group/lib/project_group/plugin.rb	/^    fattr(:list) { [] }$/;"	r
load!	/code/orig/baseball/lib/baseball.rb	/^    def load!$/;"	f	class:Baseball
load!	/code/orig/baseball_lottery/lib/baseball_lottery.rb	/^    def load!$/;"	f	class:BaseballLottery
load!	/code/orig/baseball_projection/lib/baseball_projection.rb	/^    def load!$/;"	f	class:BaseballProjection
load!	/code/orig/bet_store/lib/bet_store.rb	/^    def load!$/;"	f	class:BetStore
load!	/code/orig/espn_scores/lib/espn_scores.rb	/^    def load!$/;"	f	class:EspnScores
load!	/code/orig/game_store/app/models/game_store/game_create.rb	/^    def load!$/;"	f	class:GameStore.GameDay
load!	/code/orig/game_store/lib/game_store.rb	/^    def load!$/;"	f	class:GameStore
load!	/code/orig/game_store/lib/game_store/game_create.rb	/^    def load!$/;"	f	class:GameStore.GameDay
load!	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^    def load!$/;"	f	class:MongoidGemConfig
load!	/code/orig/project_group/lib/project_group.rb	/^    def load!$/;"	f	class:ProjectGroup
load!	/code/orig/project_group/lib/project_group/config.rb	/^    def load!$/;"	f	class:ProjectGroup.Configs
load!	/code/orig/quebec_lottery/gem/lib/quebec_lottery.rb	/^    def load!$/;"	f	class:QuebecLottery
load!	/code/orig/sim_back/lib/sim_back.rb	/^    def load!$/;"	f	class:SimBack
load_file	/code/orig/baseball_projection/lib/baseball_projection/single_projection.rb	/^    def load_file(file,type,accum)$/;"	f	class:Projections
load_sample_games!	/code/orig/game_store/lib/game_store/util.rb	/^    def load_sample_games!$/;"	f	class:GameStore
load_seasons!	/code/orig/game_store/lib/game_store/util.rb	/^    def load_seasons!$/;"	f	class:GameStore
load_teams!	/code/orig/game_store/lib/game_store/util.rb	/^    def load_teams!$/;"	f	class:GameStore
loaded	/code/orig/project_group/lib/project_group/config.rb	/^      fattr(:loaded) do$/;"	r
loaded?	/code/orig/game_store/app/models/game_store/game_create.rb	/^    def loaded?$/;"	f	class:GameStore.GameDay
loaded?	/code/orig/game_store/lib/game_store/game_create.rb	/^    def loaded?$/;"	f	class:GameStore.GameDay
local_deps	/code/orig/project_group/vol/mock_deps.rb	/^  def local_deps(group)$/;"	f	class:MyGem
local_group	/code/orig/project_group/lib/project_group/config.rb	/^    def local_group$/;"	f	class:ProjectGroup
log_make_summary	/code/orig/sim_back/lib/sim_back/summary_worker.rb	/^      def log_make_summary(*args)$/;"	f	class:SimBack.IntermediateSummaryWorker
log_odds	/code/orig/odds/lib/odds/odds.rb	/^    def log_odds$/;"	f	class:Odds
log_p1	/code/orig/odds/lib/odds/algorithms/parlay_utility.rb	/^      def log_p1(num)$/;"	f	class:Odds.Algorithms.ParlayUtility.log_utility_for_scenario
log_utility_for_scenario	/code/orig/odds/lib/odds/algorithms/parlay_utility.rb	/^      def log_utility_for_scenario(scenario)$/;"	f	class:Odds.Algorithms.ParlayUtility
log_utility_of_perc	/code/orig/odds/lib/odds/algorithms/kelly.rb	/^      def log_utility_of_perc(perc)$/;"	f	class:Odds.Algorithms.Kelly
logger	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^  def logger$/;"	f	class:GeneticAlgorithm
loss_chance	/code/orig/odds/lib/odds/bet.rb	/^    def loss_chance$/;"	f	class:Odds.Bet
loss_chance	/code/orig/odds/lib/odds/odds.rb	/^    def loss_chance$/;"	f	class:Odds.Odds
main	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    fattr(:main) do$/;"	r
make	/code/orig/baseball_projection/lib/baseball_projection/composite_projection.rb	/^      def make(singles)$/;"	f	class:BaseballProjection.CompositeProjection
make	/code/orig/project_group/spec/support/make_initial.rb	/^    def make(&b)$/;"	f
make	/code/orig/project_group/spec/support/make_initial.rb	/^  def make(&b)$/;"	f
make	/code/orig/project_group/vol/pipe_test.rb	/^    def make(ops={})$/;"	f	class:CaptureOut
make	/code/orig/sim_back/vol/fork_test.rb	/^    def make(ops={})$/;"	f	class:CaptureOut
make_from_real	/code/orig/baseball/lib/baseball/player.rb	/^      def make_from_real(first,last,year)$/;"	f	class:Baseball.Player
make_one	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^      def make_one(ops)$/;"	f	class:BaseballProjection.SavedProjection
make_project	/code/orig/project_group/spec/support/make_initial.rb	/^  def make_project(name)$/;"	f
make_question	/code/orig/bet_store/spec/question/over_under_spec.rb	/^      def make_question(ops={})$/;"	f
make_rand	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^    def make_rand$/;"	f	class:ParlayPercs
make_remote	/code/orig/project_group/spec/support/make_initial.rb	/^  def make_remote$/;"	f	class:MakeInitial
make_response	/code/orig/espn_scores/lib/espn_scores/web.rb	/^      def make_response$/;"	f	class:EspnScores.Web
make_saves	/code/orig/quebec_lottery/gem/vol/remote_test.rb	/^def make_saves(games)$/;"	f
make_single_bets	/code/orig/odds/vol/parlays_as_horses.rb	/^def make_single_bets$/;"	f
make_summary	/code/orig/baseball_lottery/lib/baseball_lottery/simback_setup.rb	/^    def make_summary(progress)$/;"	f	class:SimBack.SummaryWorker
make_summary	/code/orig/sim_back/lib/sim_back/summary_worker.rb	/^    def make_summary(*args)$/;"	f	class:SimBack.IntermediateSummaryWorker
make_summary	/code/orig/sim_back/lib/sim_back/summary_worker.rb	/^    def make_summary(progress)$/;"	f	class:SimBack.SummaryWorker
make_summary	/code/orig/sim_back/spec/support_ext/basic_imp.rb	/^    def make_summary(*args)$/;"	f	class:SimBack.IntermediateSummaryWorker
make_summary	/code/orig/sim_back/spec/support_ext/basic_imp.rb	/^    def make_summary(progress)$/;"	f	class:SimBack.SummaryWorker
map_centered_on_sum	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^  def map_centered_on_sum(target_sum)$/;"	f	class:Array
map_centered_on_sum	/code/orig/odds/lib/odds/ext/map_special.rb	/^  def map_centered_on_sum(target_sum)$/;"	f	class:Array
map_restrict_to_range	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^  def map_restrict_to_range(r)$/;"	f	class:Array
map_restrict_to_range	/code/orig/odds/lib/odds/ext/map_special.rb	/^  def map_restrict_to_range(r)$/;"	f	class:Array
max_chunk_size	/code/orig/sim_back/lib/sim_back/queue.rb	/^      def max_chunk_size$/;"	f	class:SimBack.Queue
merge_into	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^  def merge_into(config,accum)$/;"	f	class:CompositeMongoConfig
method_missing	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^  def method_missing(sym,*args,&b)$/;"	f	class:MyLogger
method_missing	/code/orig/project_group/lib/project_group/config.rb	/^    def method_missing(sym,*args,&b)$/;"	f	class:ProjectGroup.DSLWrapper
method_missing	/code/orig/project_group/spec/config_spec.rb	/^  def method_missing(sym,*args,&b)$/;"	f	class:Safe
method_missing	/code/orig/quebec_lottery/gem/lib/quebec_lottery/pages.rb	/^      def method_missing(sym,*args,&b)$/;"	f	class:QuebecLottery.Pages
mod_line	/code/orig/bet_store/app/models/bet_store/matched_sides.rb	/^    def mod_line(side)$/;"	f	class:BetStore.MatchedSides
mod_line	/code/orig/bet_store/lib/bet_store/matched_sides.rb	/^    def mod_line(side)$/;"	f	class:BetStore.MatchedSides
mongoize	/code/orig/bet_store/lib/bet_store/ext/odds_ext.rb	/^      def mongoize(object)$/;"	f	class:Odds.Odds
mongoize_old	/code/orig/bet_store/lib/bet_store/ext/odds_ext.rb	/^    def mongoize_old$/;"	f	class:Odds.Odds
mutate	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^  def mutate$/;"	f	class:ParlayPercs
mutate_one	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^  def mutate_one$/;"	f	class:ParlayPercs
my_class_name	/code/orig/mongoid_gem_config/lib/mongoid_gem_config/rich_field.rb	/^      def my_class_name(name)$/;"	f	class:MongoidGemConfig.RichField.ClassMethods
my_module_name	/code/orig/mongoid_gem_config/lib/mongoid_gem_config/rich_field.rb	/^      def my_module_name$/;"	f	class:MongoidGemConfig.RichField.ClassMethods
name	/code/orig/baseball_projection/lib/baseball_projection/composite_projection.rb	/^    def name$/;"	f	class:BaseballProjection.CompositeProjection
name	/code/orig/baseball_projection/lib/baseball_projection/stat.rb	/^    def name$/;"	f	class:BaseballProjection.Stat
name	/code/orig/project_group/lib/project_group/repo.rb	/^    def name$/;"	f	class:ProjectGroup.Repo
name	/code/orig/project_group/lib/project_group/single.rb	/^    fattr(:name) do$/;"	r
name	/code/orig/project_group/spec/support/make_initial.rb	/^  let(:name) { names.first }$/;"	r
name=	/code/orig/baseball_projection/lib/baseball_projection/stat.rb	/^    def name=(x)$/;"	f	class:BaseballProjection.Stat
names	/code/orig/baseball_projection/lib/baseball_projection/stat.rb	/^    fattr(:names) { [] }$/;"	r
names	/code/orig/project_group/spec/support/make_initial.rb	/^  let(:names) { self.class.project_blocks.keys }$/;"	r
namex	/code/orig/project_group/lib/project_group/config.rb	/^    def namex(name)$/;"	f	class:ProjectGroup.GroupWrapper
needed_zeroes	/code/orig/baseball_projection/lib/baseball_projection/pa_estimate.rb	/^    def needed_zeroes$/;"	f	class:BaseballProjection.PaEstimate
needs_desc	/code/orig/project_group/lib/project_group/repo.rb	/^    def needs_desc$/;"	f	class:ProjectGroup.Repo
needs_push?	/code/orig/project_group/lib/project_group/group.rb	/^    def needs_push?$/;"	f	class:ProjectGroup.Group
needs_push?	/code/orig/project_group/lib/project_group/single.rb	/^    def needs_push?$/;"	f	class:ProjectGroup
new	/code/orig/baseball_lottery/lib/baseball_lottery/season_props.rb	/^      def new(ops)$/;"	f	class:BaseballLottery.SeasonProp
new	/code/orig/odds/lib/odds/algorithms/correlated_kelly.rb	/^      def self.new(*args)$/;"	F	class:Odds.Algorithms.CorrelatedKelly
new_sim	/code/orig/odds/vol/parlays_as_horses.rb	/^  def new_sim$/;"	f	class:Sims
nodes	/code/orig/project_group/vol/mock_deps.rb	/^  def nodes$/;"	f	class:Deps
num_wins	/code/orig/baseball_lottery/lib/baseball_lottery/sims.rb	/^    def num_wins(comb)$/;"	f	class:BaseballLottery.TruthHash
num_wins_for_bets	/code/orig/baseball_lottery/lib/baseball_lottery/sims.rb	/^    def num_wins_for_bets(bets)$/;"	f	class:BaseballLottery
obj_for_date	/code/orig/espn_scores/lib/espn_scores/week.rb	/^      def obj_for_date(ops)$/;"	f	class:EspnScores.Week
obj_for_week	/code/orig/espn_scores/lib/espn_scores/week.rb	/^      def obj_for_week(ops)$/;"	f	class:EspnScores.Week
obp	/code/orig/baseball_projection/lib/baseball_projection/calced_stats_mod.rb	/^    def obp$/;"	f	class:BaseballProjection.CalcedStatsMod
odds	/code/orig/odds/lib/odds/odds.rb	/^    def odds$/;"	f	class:Odds
odds	/code/orig/odds/lib/odds/parlay.rb	/^    fattr(:odds) do$/;"	r
odds	/code/orig/odds/spec/odds_spec.rb	/^  def odds(win_chance)$/;"	f
odds	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/prop_line.rb	/^    def odds$/;"	f	class:QuebecLottery.PropLine
odds	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    def odds$/;"	f	class:SeasonProp
odds=	/code/orig/odds/lib/odds/bet.rb	/^    def odds=(o)$/;"	f	class:Odds.Bet
odds_obj	/code/orig/bet_store/app/models/bet_store/side.rb	/^      def odds_obj$/;"	f	class:BetStore.Side.Base
odds_obj	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^      def odds_obj$/;"	f	class:BetStore.Side.Base
odds_obj	/code/orig/bet_store/lib/bet_store/side.rb	/^      def odds_obj$/;"	f	class:BetStore.Side.Base
odds_sum	/code/orig/odds/lib/odds/lines.rb	/^    def odds_sum$/;"	f	class:Odds.Lines
odds_with_vig	/code/orig/baseball_lottery/vol/with_vig.rb	/^def odds_with_vig(win_chance,target_vig)$/;"	f
oddsv	/code/orig/baseball_lottery/spec/support/bets.rb	/^  def oddsv(win_chance,which)$/;"	f
oddsv	/code/orig/baseball_lottery/vol/intermediate_test.rb	/^def oddsv(win_chance,which)$/;"	f
only_dep_changes?	/code/orig/project_group/lib/project_group/repo.rb	/^    def only_dep_changes?$/;"	f	class:ProjectGroup.Repo
open	/code/orig/project_group/lib/project_group/command.rb	/^    def open$/;"	f	class:ProjectGroup.Command
opposites	/code/orig/bet_store/app/models/bet_store/side.rb	/^      def opposites$/;"	f	class:BetStore.Side.Base.Const
opposites	/code/orig/bet_store/app/models/bet_store/side.rb	/^      def opposites$/;"	f	class:BetStore.Side.Base.Team
opposites	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^      def opposites$/;"	f	class:BetStore.Side.Base.Const
opposites	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^      def opposites$/;"	f	class:BetStore.Side.Base.Team
opposites	/code/orig/bet_store/lib/bet_store/side.rb	/^      def opposites$/;"	f	class:BetStore.Side.Base.Const
opposites	/code/orig/bet_store/lib/bet_store/side.rb	/^      def opposites$/;"	f	class:BetStore.Side.Base.Team
ops	/code/orig/baseball_projection/lib/baseball_projection/calced_stats_mod.rb	/^    def ops$/;"	f	class:BaseballProjection.CalcedStatsMod
optimal_bet_perc	/code/orig/odds/lib/odds/algorithms/correlated_kelly.rb	/^        def optimal_bet_perc(bet)$/;"	f	class:Odds.Algorithms.CorrelatedKelly.Calc
option	/code/orig/project_group/lib/project_group/plugin.rb	/^    def option(cmd,op)$/;"	f	class:ProjectGroup
origin_dir	/code/orig/project_group/spec/support/make_initial.rb	/^  def origin_dir$/;"	f	class:MakeInitial
other_sides	/code/orig/bet_store/app/models/bet_store/side.rb	/^      def other_sides$/;"	f	class:BetStore.Side.Base
other_sides	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^      def other_sides$/;"	f	class:BetStore.Side.Base
other_sides	/code/orig/bet_store/lib/bet_store/side.rb	/^      def other_sides$/;"	f	class:BetStore.Side.Base
other_team	/code/orig/bet_store/app/models/bet_store/side.rb	/^      def other_team$/;"	f	class:BetStore.Side.Base.Team
other_team	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^      def other_team$/;"	f	class:BetStore.Side.Base.Team
other_team	/code/orig/bet_store/lib/bet_store/side.rb	/^      def other_team$/;"	f	class:BetStore.Side.Base.Team
ou_type	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    def ou_type$/;"	f	class:SeasonProp
outs	/code/orig/baseball/lib/baseball/game.rb	/^    fattr(:outs) { 0 }$/;"	r
over	/code/orig/baseball_lottery/spec/sims_spec.rb	/^  let(:over) do$/;"	r
over_odds=	/code/orig/baseball_lottery/lib/baseball_lottery/stat_bet.rb	/^    def over_odds=(x)$/;"	f	class:BaseballLottery.StatBet
over_under	/code/orig/bet_store/lib/bet_store/question_api.rb	/^      def over_under(ops)$/;"	f	class:BetStore.QuestionApi
overround	/code/orig/odds/lib/odds/lines.rb	/^    def overround$/;"	f	class:Odds.Lines
pa	/code/orig/baseball_projection/lib/baseball_projection/true_talent.rb	/^    def pa$/;"	f	class:BaseballProjection.TrueTalent
pages	/code/orig/quebec_lottery/gem/lib/quebec_lottery/pages.rb	/^    fattr(:pages) { {} }$/;"	r
parlay	/code/orig/odds/spec/parlay_spec.rb	/^    let(:parlay) do$/;"	r
parlay_for_bet_string	/code/orig/odds/vol/parlays_as_horses.rb	/^  def parlay_for_bet_string(bet_string)$/;"	f	class:Sims
parlays	/code/orig/baseball_lottery/lib/baseball_lottery/sims.rb	/^    fattr(:parlays) do$/;"	r
parlays	/code/orig/odds/lib/odds/algorithms/parlay_utility.rb	/^      fattr(:parlays) { [] }$/;"	r
parlays	/code/orig/odds/lib/odds/special/combination_parlay.rb	/^    fattr(:parlays) do$/;"	r
parse	/code/orig/espn_scores/spec/date_parse_spec.rb	/^  let(:parse) do$/;"	r
parse!	/code/orig/project_group/lib/project_group/command.rb	/^    def parse!(args)$/;"	f	class:ProjectGroup.Command
path	/code/orig/project_group/lib/project_group/sublime_project.rb	/^    fattr(:path) do$/;"	r
path	/code/orig/project_group/vol/mock_deps.rb	/^  fattr(:path) { "\/code\/orig\/#{name}" }$/;"	r
perc	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^    def perc(ops)$/;"	f	class:BaseballProjection.EnsuredWhere
perc_gt	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^    def perc_gt(ops)$/;"	f	class:BaseballProjection.EnsuredWhere
perc_lt	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^    def perc_lt(ops)$/;"	f	class:BaseballProjection.EnsuredWhere
perc_win	/code/orig/baseball_lottery/lib/baseball_lottery/season_props.rb	/^      def perc_win$/;"	f	class:BaseballLottery.SeasonProp.OverUnder
perc_win	/code/orig/baseball_lottery/lib/baseball_lottery/season_props.rb	/^      def perc_win$/;"	f	class:BaseballLottery.SeasonProp.Vs
percentile	/code/orig/baseball_projection/lib/baseball_projection/samples.rb	/^    def percentile(perc)$/;"	f	class:BaseballProjection.Samples
percentile_index	/code/orig/baseball_projection/lib/baseball_projection/samples.rb	/^    def percentile_index(perc)$/;"	f	class:BaseballProjection.Samples
perform	/code/orig/sim_back/lib/sim_back/consolidate_worker.rb	/^    def perform(sim_progress_id)$/;"	f	class:SimBack.ConsolidateWorker
perform	/code/orig/sim_back/lib/sim_back/summary_worker.rb	/^    def perform(sim_progress_id)$/;"	f	class:SimBack.SummaryWorker
perform	/code/orig/sim_back/lib/sim_back/summary_worker.rb	/^    def perform(sim_progress_id,target_sims)$/;"	f	class:SimBack.IntermediateSummaryWorker
perform	/code/orig/sim_back/lib/sim_back/worker.rb	/^    def perform(sim_progress_id,num_sims)$/;"	f	class:Worker
pgem	/code/orig/project_group/lib/project_group/command.rb	/^    def pgem$/;"	f	class:ProjectGroup.Command
pipes	/code/orig/project_group/vol/pipe_test.rb	/^  fattr(:pipes) do$/;"	r
pitching?	/code/orig/bet_store/app/models/bet_store/question.rb	/^      def pitching?$/;"	f	class:BetStore.Question.Base
pitching?	/code/orig/bet_store/junk/app/models/bet_store/question.rb	/^      def pitching?$/;"	f	class:BetStore.Question.Base
pitching?	/code/orig/bet_store/lib/bet_store/question.rb	/^      def pitching?$/;"	f	class:BetStore.Question.Base
play	/code/orig/baseball/lib/baseball/game.rb	/^    def play$/;"	f	class:Baseball.Game
play_batter	/code/orig/baseball/lib/baseball/game.rb	/^    def play_batter$/;"	f	class:Baseball.Game
play_inning	/code/orig/baseball/lib/baseball/game.rb	/^    def play_inning$/;"	f	class:Baseball.Game
player	/code/orig/baseball_lottery/lib/baseball_lottery/season_props.rb	/^      fattr(:player) { side.player }$/;"	r
player	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    def player$/;"	f	class:SeasonProp
player_id	/code/orig/baseball_projection/lib/baseball_projection/composite_projection.rb	/^    def player_id$/;"	f	class:BaseballProjection.CompositeProjection
players	/code/orig/baseball/lib/baseball/lineup.rb	/^    fattr(:players) do$/;"	r
population	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^  def population$/;"	f	class:GeneticAlgorithm
potential_profit	/code/orig/odds/lib/odds/bet.rb	/^    def potential_profit$/;"	f	class:Odds.Bet
prediction_number	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    def prediction_number$/;"	f	class:SeasonProp
present?	/code/orig/quebec_lottery/gem/lib/quebec_lottery.rb	/^  def present?$/;"	f	class:Object
print!	/code/orig/project_group/lib/project_group/repo.rb	/^    def print!$/;"	f	class:ProjectGroup.Repo
print_one	/code/orig/baseball_projection/spec/baseball_projection_spec.rb	/^  def print_one(r)$/;"	f
private_gem	/code/orig/project_group/lib/project_group/command.rb	/^def private_gem(name)$/;"	f	class:ProjectGroup.Command.update_private_gem
probs	/code/orig/baseball/lib/baseball/player.rb	/^    fattr(:probs) do$/;"	r
process!	/code/orig/project_group/vol/mock_deps.rb	/^  def process!$/;"	f	class:Deps
process_one!	/code/orig/project_group/vol/mock_deps.rb	/^  def process_one!$/;"	f	class:Deps
processed	/code/orig/project_group/vol/mock_deps.rb	/^  fattr(:processed) { [] }$/;"	r
proj	/code/orig/project_group/spec/support/make_initial.rb	/^  let(:proj) do$/;"	r
proj_fields	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^      def proj_fields$/;"	f	class:BaseballProjection.SavedProjection
project	/code/orig/project_group/lib/project_group/config.rb	/^      def project(name,&b)$/;"	f	class:ProjectGroup
project	/code/orig/project_group/lib/project_group/config.rb	/^    def project(name,&b)$/;"	f	class:ProjectGroup
project	/code/orig/project_group/lib/project_group/config.rb	/^    def project(proj_name,&b)$/;"	f	class:ProjectGroup.GroupWrapper
project	/code/orig/project_group/spec/support/config.rb	/^  let(:project) do$/;"	r
project	/code/orig/project_group/spec/support/make_initial.rb	/^    def project(name=nil,&b)$/;"	f
project	/code/orig/project_group/spec/support/make_initial.rb	/^  def project(name,ops={},&b)$/;"	f
projects	/code/orig/project_group/lib/project_group/config.rb	/^    fattr(:projects) { [] }$/;"	r
projects_dir	/code/orig/project_group/spec/support/make_initial.rb	/^  def projects_dir$/;"	f	class:MakeInitial
prop	/code/orig/baseball_lottery/spec/season_props_spec.rb	/^  let(:prop) do$/;"	r
prop	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/save_prop.rb	/^    def prop; props.first; end$/;"	f	class:QuebecLottery.SaveProp
prop	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    def prop$/;"	f	class:SeasonProp
prop	/code/orig/quebec_lottery/gem/spec/game/hockey_game_spec.rb	/^      let(:prop) do$/;"	r
prop	/code/orig/quebec_lottery/gem/spec/game/hockey_game_spec.rb	/^    let(:prop) do$/;"	r
prop	/code/orig/quebec_lottery/gem/spec/season/bet_store_spec.rb	/^      let(:prop) do$/;"	r
props	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/game_props.rb	/^    fattr(:props) do$/;"	r
props	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    fattr(:props) do$/;"	r
props	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    fattr(:props) { [] }$/;"	r
props	/code/orig/quebec_lottery/gem/spec/season/bet_store_spec.rb	/^  let(:props) do$/;"	r
props	/code/orig/quebec_lottery/gem/spec/season/season_props_spec.rb	/^  let(:props) do$/;"	r
push	/code/orig/project_group/lib/project_group/command.rb	/^    def push$/;"	f	class:ProjectGroup.Command
push	/code/orig/project_group/spec/support/make_initial.rb	/^  def push$/;"	f
push_check!	/code/orig/project_group/lib/project_group/repo.rb	/^    def push_check!$/;"	f	class:ProjectGroup.Repo
pushed?	/code/orig/project_group/lib/project_group/repo.rb	/^    def pushed?$/;"	f	class:ProjectGroup.Repo
question	/code/orig/baseball_lottery/spec/season_props_spec.rb	/^    let(:question) do$/;"	r
question	/code/orig/bet_store/app/models/bet_store/matched_sides.rb	/^    def question$/;"	f	class:BetStore.MatchedSides
question	/code/orig/bet_store/lib/bet_store/matched_sides.rb	/^    def question$/;"	f	class:BetStore.MatchedSides
question	/code/orig/bet_store/spec/bet_store_spec.rb	/^  let(:question) do$/;"	r
question	/code/orig/bet_store/spec/question/over_under_spec.rb	/^    let(:question) do$/;"	r
question	/code/orig/quebec_lottery/gem/spec/game/hockey_game_spec.rb	/^    let(:question) do$/;"	r
question	/code/orig/quebec_lottery/gem/spec/season/bet_store_spec.rb	/^    let(:question) do$/;"	r
question_props	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    def question_props$/;"	f	class:SeasonProp
queue	/code/orig/sim_back/lib/sim_back/queue.rb	/^      def queue(num_sims, sim_progress_ops)$/;"	f	class:SimBack.Queue
rand_el	/code/orig/baseball_projection/lib/baseball_projection.rb	/^  def rand_el$/;"	f	class:Array
rand_el	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^  def rand_el$/;"	f	class:Array
rand_el	/code/orig/odds/lib/odds/ext/rand.rb	/^  def rand_el$/;"	f	class:Array
rand_num	/code/orig/odds/lib/odds/ext/rand.rb	/^  def rand_num$/;"	f	class:Range
rand_sq_num	/code/orig/odds/lib/odds/ext/rand.rb	/^  def rand_sq_num$/;"	f	class:Range
rand_sqrt_num	/code/orig/odds/lib/odds/ext/rand.rb	/^  def rand_sqrt_num$/;"	f	class:Range
random	/code/orig/baseball_projection/spec/baseball_projection_spec.rb	/^  def random$/;"	f
rate	/code/orig/baseball_projection/lib/baseball_projection/stat.rb	/^    fattr(:rate) { false }$/;"	r
raw	/code/orig/espn_scores/spec/date_parse_spec.rb	/^      let(:raw) { '07-03-2013' }$/;"	r
raw	/code/orig/espn_scores/spec/date_parse_spec.rb	/^      let(:raw) { '07\/03' }$/;"	r
raw	/code/orig/espn_scores/spec/date_parse_spec.rb	/^      let(:raw) { '07\/03\/2013' }$/;"	r
raw	/code/orig/espn_scores/spec/date_parse_spec.rb	/^      let(:raw) { '3' }$/;"	r
raw	/code/orig/espn_scores/spec/date_parse_spec.rb	/^      let(:raw) { 'abc' }$/;"	r
raw	/code/orig/espn_scores/spec/date_parse_spec.rb	/^      let(:raw) { 'today' }$/;"	r
reach	/code/orig/project_group/lib/project_group/command.rb	/^    def reach$/;"	f	class:ProjectGroup.Command
read_from_file	/code/orig/sim_back/vol/fork_test.rb	/^  def read_from_file$/;"	f	class:CaptureOut
read_pipe	/code/orig/project_group/vol/pipe_test.rb	/^  def read_pipe; pipes[0]; end$/;"	f	class:Spawn
recombine	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^  def recombine(other)$/;"	f	class:ParlayPercs
register_gems	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^    def register_gems(*gems)$/;"	f	class:MongoidGemConfig
register_plugin	/code/orig/project_group/lib/project_group.rb	/^    def register_plugin(name,ops={},&b)$/;"	f	class:ProjectGroup
register_sport	/code/orig/espn_scores/lib/espn_scores/day.rb	/^      def register_sport(*names)$/;"	f	class:EspnScores.Day
relative_files	/code/orig/project_group/lib/project_group/single.rb	/^    def relative_files  $/;"	f	class:ProjectGroup.Single
release	/code/orig/project_group/lib/project_group/command.rb	/^    def release$/;"	f	class:ProjectGroup.Command
replace_stderr!	/code/orig/project_group/vol/pipe_test.rb	/^  def replace_stderr!$/;"	f	class:CaptureOut
replace_stderr!	/code/orig/sim_back/vol/fork_test.rb	/^  def replace_stderr!$/;"	f	class:CaptureOut
replace_stdout!	/code/orig/project_group/vol/pipe_test.rb	/^  def replace_stdout!$/;"	f	class:CaptureOut
replace_stdout!	/code/orig/sim_back/vol/fork_test.rb	/^  def replace_stdout!$/;"	f	class:CaptureOut
repo	/code/orig/project_group/lib/project_group/repo.rb	/^    fattr(:repo) do$/;"	r
repo	/code/orig/project_group/lib/project_group/single.rb	/^    def repo$/;"	f	class:ProjectGroup
reschedule	/code/orig/baseball_lottery/spec/support_ext/summary_worker_reschedule.rb	/^    def reschedule(*args)$/;"	f	class:SimBack.IntermediateSummaryWorker
reschedule	/code/orig/baseball_lottery/spec/support_ext/summary_worker_reschedule.rb	/^    def reschedule(*args)$/;"	f	class:SimBack.SummaryWorker
reschedule	/code/orig/sim_back/lib/sim_back/consolidate_worker.rb	/^    def reschedule(*args)$/;"	f	class:SimBack.ConsolidateWorker
reschedule	/code/orig/sim_back/lib/sim_back/summary_worker.rb	/^    def reschedule(*args)$/;"	f	class:SimBack.SummaryMod
reschedule	/code/orig/sim_back/spec/support_ext/summary_worker_reschedule.rb	/^    def reschedule(*args)$/;"	f	class:SimBack.SummaryWorker
results	/code/orig/baseball_lottery/lib/baseball_lottery/sims.rb	/^    fattr(:results) do$/;"	r
results	/code/orig/baseball_projection/lib/baseball_projection/samples.rb	/^    fattr(:results) { [] }$/;"	r
rich_field	/code/orig/bet_store/junk/app/models/bet_store/richer_field.rb	/^      def rich_field(name,ops={})$/;"	f	class:BetStore.RicherField.ClassMethods
root	/code/orig/baseball/lib/baseball.rb	/^    def root$/;"	f	class:Baseball
root	/code/orig/baseball_lottery/lib/baseball_lottery.rb	/^    def root$/;"	f	class:BaseballLottery
root	/code/orig/baseball_projection/lib/baseball_projection.rb	/^    def root$/;"	f	class:BaseballProjection
root	/code/orig/bet_store/lib/bet_store.rb	/^    def root$/;"	f	class:BetStore
root	/code/orig/espn_scores/lib/espn_scores.rb	/^    def root$/;"	f	class:EspnScores
root	/code/orig/game_store/lib/game_store.rb	/^    def root$/;"	f	class:GameStore
root	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^    def root$/;"	f	class:MongoidGemConfig
root	/code/orig/quebec_lottery/gem/lib/quebec_lottery.rb	/^    def root$/;"	f	class:QuebecLottery
root	/code/orig/sim_back/lib/sim_back.rb	/^    def root$/;"	f	class:SimBack
root_for	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^  def root_for(g)$/;"	f	class:CompositeMongoConfig
row=	/code/orig/baseball_projection/lib/baseball_projection/single_projection.rb	/^    def row=(row)$/;"	f	class:BaseballProjection.SingleProjection
rows	/code/orig/bet_store/app/models/bet_store/matched_sides.rb	/^    fattr(:rows) do$/;"	r
rows	/code/orig/bet_store/lib/bet_store/matched_sides.rb	/^    fattr(:rows) do$/;"	r
rpad	/code/orig/baseball_projection/lib/baseball_projection.rb	/^  def rpad(num,char)$/;"	f	class:Float
run	/code/orig/project_group/lib/project_group/plugin.rb	/^    def run(cmd,singles,ops={})$/;"	f	class:ProjectGroup
run	/code/orig/project_group/spec/support/make_initial.rb	/^    def run(&b)$/;"	f
run	/code/orig/project_group/spec/support/make_initial.rb	/^  def run(&b)$/;"	f
run!	/code/orig/baseball_lottery/lib/baseball_lottery/simback_setup.rb	/^    def run!$/;"	f	class:SimBack.Sim
run!	/code/orig/baseball_lottery/lib/baseball_lottery/simback_setup.rb	/^    def run!$/;"	f	class:SimBack.SummaryObj
run!	/code/orig/odds/lib/odds/algorithms/correlated_kelly.rb	/^        def run!$/;"	f	class:Odds.Algorithms.CorrelatedKelly.Calc
run!	/code/orig/project_group/lib/project_group/command.rb	/^    def run!$/;"	f	class:ProjectGroup.Command
run!	/code/orig/project_group/lib/project_group/run_tests.rb	/^      def run!$/;"	f	class:ProjectGroup.RunTests.Single
run!	/code/orig/project_group/lib/project_group/run_tests.rb	/^    def run!$/;"	f	class:ProjectGroup.RunTests
run!	/code/orig/sim_back/lib/sim_back/sim.rb	/^    def run!$/;"	f	class:SimBack.Sim
run!	/code/orig/sim_back/lib/sim_back/sims.rb	/^    def run!$/;"	f	class:SimBack.Sims
run!	/code/orig/sim_back/spec/support/fake_runner.rb	/^  def run!$/;"	f	class:FakeRunner
run!	/code/orig/sim_back/spec/support_ext/basic_imp.rb	/^    def run!$/;"	f	class:SimBack.Sim
run_genetic	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^def run_genetic$/;"	f	class:Array
run_once!	/code/orig/sim_back/spec/support/fake_runner.rb	/^  def run_once!$/;"	f	class:FakeRunner
run_prof	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^def run_prof$/;"	f	class:Array
run_state	/code/orig/sim_back/lib/sim_back/sim_progress.rb	/^    def run_state$/;"	f	class:SimBack.SimProgress
runner	/code/orig/sim_back/spec/support/fake_runner.rb	/^  let(:runner) do$/;"	r
safe	/code/orig/project_group/spec/config_spec.rb	/^  def safe$/;"	f	class:Object
sample_dir	/code/orig/quebec_lottery/gem/spec/support/samples.rb	/^    def sample_dir$/;"	f	class:QuebecLottery
save!	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/load.rb	/^    def save!$/;"	f	class:QuebecLottery.SaveGameProp
save!	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/save_prop.rb	/^    def save!$/;"	f	class:QuebecLottery.SaveProp
save_over_under!	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/save_prop.rb	/^    def save_over_under!$/;"	f	class:QuebecLottery.SaveProp
save_player_one_goal!	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/load.rb	/^    def save_player_one_goal!$/;"	f	class:QuebecLottery.SaveGameProp
save_player_vs!	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/load.rb	/^    def save_player_vs!$/;"	f	class:QuebecLottery.SaveGameProp
save_spread!	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/load.rb	/^    def save_spread!$/;"	f	class:QuebecLottery.SaveGameProp
save_total!	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/load.rb	/^    def save_total!$/;"	f	class:QuebecLottery.SaveGameProp
save_vs!	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/save_prop.rb	/^    def save_vs!$/;"	f	class:QuebecLottery.SaveProp
scenarios	/code/orig/odds/lib/odds/algorithms/parlay_utility.rb	/^      fattr(:scenarios) { [] }$/;"	r
scenarios	/code/orig/odds/lib/odds/special/load_sims.rb	/^    fattr(:scenarios) do$/;"	r
score	/code/orig/baseball/lib/baseball/game.rb	/^    fattr(:score) do$/;"	r
score_selector	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^    def score_selector$/;"	f	class:EspnScores.BaseballGame
score_selector	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^    def score_selector$/;"	f	class:EspnScores.BasketballGame
score_selector	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^    def score_selector$/;"	f	class:EspnScores.FootballGame
score_selector	/code/orig/espn_scores/lib/espn_scores/game_types.rb	/^    def score_selector$/;"	f	class:EspnScores.HockeyGame
scorebox_class	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^    def scorebox_class$/;"	f	class:EspnScores.BaseballDay
scorebox_class	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^    def scorebox_class$/;"	f	class:EspnScores.BasketballDay
scorebox_class	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^    def scorebox_class$/;"	f	class:EspnScores.CollegeFootballDay
scorebox_class	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^    def scorebox_class$/;"	f	class:EspnScores.FootballDay
scorebox_class	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^    def scorebox_class$/;"	f	class:EspnScores.HockeyDay
sd	/code/orig/baseball_projection/lib/baseball_projection/true_talent.rb	/^    def sd$/;"	f	class:BaseballProjection.TrueTalent
season	/code/orig/bet_store/spec/question/over_under_spec.rb	/^      let(:season) do$/;"	r
season	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/save_prop.rb	/^    fattr(:season) do$/;"	r
season_perc	/code/orig/baseball_lottery/lib/baseball_lottery/season_props.rb	/^      def season_perc(season)$/;"	f	class:BaseballLottery.SeasonProp.Vs
season_stat_over_under	/code/orig/bet_store/lib/bet_store/question_api.rb	/^      def season_stat_over_under(ops)$/;"	f	class:BetStore.QuestionApi
season_stat_vs	/code/orig/bet_store/lib/bet_store/question_api.rb	/^      def season_stat_vs(ops)$/;"	f	class:BetStore.QuestionApi
seconds_till_update	/code/orig/espn_scores/lib/espn_scores/date_parse.rb	/^    def seconds_till_update(now=Time.now)$/;"	f	class:EspnScores.DateParse
selected	/code/orig/odds/lib/odds/algorithms/correlated_kelly.rb	/^        fattr(:selected) { [] }$/;"	r
selected_set_rate	/code/orig/odds/lib/odds/algorithms/correlated_kelly.rb	/^        def selected_set_rate$/;"	f	class:Odds.Algorithms.CorrelatedKelly.Calc
set_expected_win_chance!	/code/orig/baseball_lottery/lib/baseball_lottery/tasks.rb	/^    def set_expected_win_chance!$/;"	f	class:BaseballLottery
set_field	/code/orig/baseball_projection/lib/baseball_projection/single_projection.rb	/^    def set_field(k,v)$/;"	f	class:BaseballProjection.SingleProjection
set_first_week	/code/orig/espn_scores/lib/espn_scores/week.rb	/^      def set_first_week(sport,year,start_date)$/;"	f	class:EspnScores.Week
set_full_name!	/code/orig/game_store/app/models/game_store/team_mod.rb	/^    def set_full_name!$/;"	f	class:GameStore.TeamMod
set_full_name!	/code/orig/game_store/lib/game_store/team_mod.rb	/^    def set_full_name!$/;"	f	class:GameStore.TeamMod
set_game_date!	/code/orig/game_store/app/models/game_store/game_mod.rb	/^    def set_game_date!$/;"	f	class:GameStore.GameMod
set_game_date!	/code/orig/game_store/lib/game_store/game_mod.rb	/^    def set_game_date!$/;"	f	class:GameStore.GameMod
set_origin	/code/orig/espn_scores/lib/espn_scores/web.rb	/^      def set_origin$/;"	f	class:EspnScores.Web
set_rate	/code/orig/odds/lib/odds/algorithms/correlated_kelly.rb	/^        def set_rate$/;"	f	class:Odds.Algorithms.CorrelatedKelly.Calc
set_win_chances!	/code/orig/baseball_lottery/lib/baseball_lottery/sims.rb	/^    def set_win_chances!$/;"	f	class:Sims
setup!	/code/orig/sim_back/lib/sim_back/worker.rb	/^    def setup!$/;"	f	class:SimBack
setup_configs	/code/orig/project_group/spec/support/config.rb	/^  def setup_configs$/;"	f
setup_logger!	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^    def setup_logger!$/;"	f	class:MongoidGemConfig
setup_plugin	/code/orig/project_group/spec/plugin_spec.rb	/^  def setup_plugin$/;"	f
setup_projects	/code/orig/project_group/spec/support/make_initial.rb	/^    def setup_projects$/;"	f
shell_changes?	/code/orig/project_group/lib/project_group/repo.rb	/^    def shell_changes?$/;"	f	class:ProjectGroup.Repo
should_have_to_s	/code/orig/odds/spec/odds_spec.rb	/^  def self.should_have_to_s(win_chance,exp)$/;"	F
side	/code/orig/baseball_lottery/spec/season_props_spec.rb	/^    let(:side) do$/;"	r
side	/code/orig/bet_store/spec/bet_store_spec.rb	/^  let(:side) do$/;"	r
side	/code/orig/quebec_lottery/gem/spec/game/hockey_game_spec.rb	/^      def side(player)$/;"	f
side_ident	/code/orig/bet_store/app/models/bet_store/side.rb	/^      def side_ident$/;"	f	class:BetStore.Side.Base.Const
side_ident	/code/orig/bet_store/app/models/bet_store/side.rb	/^      def side_ident$/;"	f	class:BetStore.Side.Base.Player
side_ident	/code/orig/bet_store/app/models/bet_store/side.rb	/^      def side_ident$/;"	f	class:BetStore.Side.Base.Team
side_ident	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^      def side_ident$/;"	f	class:BetStore.Side.Base.Const
side_ident	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^      def side_ident$/;"	f	class:BetStore.Side.Base.Player
side_ident	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^      def side_ident$/;"	f	class:BetStore.Side.Base.Team
side_ident	/code/orig/bet_store/lib/bet_store/side.rb	/^      def side_ident$/;"	f	class:BetStore.Side.Base.Const
side_ident	/code/orig/bet_store/lib/bet_store/side.rb	/^      def side_ident$/;"	f	class:BetStore.Side.Base.Player
side_ident	/code/orig/bet_store/lib/bet_store/side.rb	/^      def side_ident$/;"	f	class:BetStore.Side.Base.Team
sides	/code/orig/bet_store/app/models/bet_store/matched_sides.rb	/^    fattr(:sides) { [] }$/;"	r
sides	/code/orig/bet_store/lib/bet_store/matched_sides.rb	/^    fattr(:sides) { [] }$/;"	r
sides	/code/orig/quebec_lottery/gem/spec/season/bet_store_spec.rb	/^    let(:sides) do$/;"	r
sim_progress	/code/orig/baseball_lottery/lib/baseball_lottery/sims.rb	/^    def sim_progress$/;"	f	class:BaseballLottery.TruthHash
simmed_parlays	/code/orig/odds/vol/parlays_as_horses.rb	/^  def simmed_parlays$/;"	f	class:Sims
sims	/code/orig/baseball_lottery/lib/baseball_lottery/simback_setup.rb	/^    fattr(:sims) do$/;"	r
sims	/code/orig/baseball_lottery/spec/sims_spec.rb	/^  let(:sims) do$/;"	r
sims	/code/orig/odds/vol/parlays_as_horses.rb	/^def sims$/;"	f
simulated_change	/code/orig/odds/lib/odds/bet.rb	/^    def simulated_change$/;"	f	class:Odds.Bet
single	/code/orig/baseball_projection/lib/baseball_projection/calced_stats_mod.rb	/^    def single$/;"	f	class:BaseballProjection.CalcedStatsMod
single_bets	/code/orig/odds/vol/parlays_as_horses.rb	/^def single_bets$/;"	f
single_for_dir	/code/orig/project_group/lib/project_group/config.rb	/^    def single_for_dir(dir,ops={})$/;"	f	class:ProjectGroup
singles	/code/orig/baseball_projection/lib/baseball_projection/composite_projection.rb	/^    fattr(:singles) { [] }$/;"	r
singles	/code/orig/project_group/lib/project_group/command.rb	/^    def singles$/;"	f	class:ProjectGroup.Command
singles	/code/orig/project_group/lib/project_group/config.rb	/^    def singles$/;"	f	class:ProjectGroup.GroupWrapper
singles	/code/orig/project_group/lib/project_group/group.rb	/^    def singles$/;"	f	class:ProjectGroup.Group
singles	/code/orig/project_group/lib/project_group/run_tests.rb	/^    fattr(:singles) { [] }$/;"	r
singles	/code/orig/project_group/spec/support/make_initial.rb	/^  let(:singles) do$/;"	r
singles=	/code/orig/project_group/lib/project_group/group.rb	/^    def singles=(x)$/;"	f	class:ProjectGroup.Group
singles_for_project_name	/code/orig/project_group/lib/project_group/command.rb	/^    def singles_for_project_name$/;"	f	class:ProjectGroup.Command
size	/code/orig/baseball/lib/baseball/bases.rb	/^    def size$/;"	f	class:Baseball.Bases
slg	/code/orig/baseball_projection/lib/baseball_projection/calced_stats_mod.rb	/^    def slg$/;"	f	class:BaseballProjection.CalcedStatsMod
sort_index	/code/orig/project_group/lib/project_group/group.rb	/^    def sort_index(single)$/;"	f	class:ProjectGroup.Group
sorted	/code/orig/baseball_projection/lib/baseball_projection/samples.rb	/^    fattr(:sorted) do$/;"	r
source	/code/orig/bet_store/spec/question/over_under_spec.rb	/^    let(:source) { BetStore::Source.get('test source') }$/;"	r
source	/code/orig/quebec_lottery/gem/lib/quebec_lottery.rb	/^    fattr(:source) do$/;"	r
source	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/save_prop.rb	/^    def source$/;"	f	class:QuebecLottery.SaveProp
sox_2013_players	/code/orig/baseball/lib/baseball/lineup.rb	/^      def sox_2013_players$/;"	f	class:Baseball.Lineup
spec_output	/code/orig/project_group/lib/project_group/single.rb	/^    def spec_output$/;"	f	class:ProjectGroup
sport	/code/orig/espn_scores/lib/espn_scores/web.rb	/^      def sport$/;"	f	class:EspnScores.Web
sport	/code/orig/espn_scores/spec/date_parse_spec.rb	/^    let(:sport) { :mlb }$/;"	r
sport	/code/orig/espn_scores/spec/date_parse_spec.rb	/^    let(:sport) { :nfl }$/;"	r
spot	/code/orig/baseball/lib/baseball/lineup.rb	/^    fattr(:spot) do$/;"	r
spread	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/prop_line.rb	/^    def spread$/;"	f	class:QuebecLottery.PropLine
start!	/code/orig/project_group/vol/pipe_test.rb	/^  def start!$/;"	f	class:Spawn
start_of_day	/code/orig/espn_scores/lib/espn_scores.rb	/^  def start_of_day$/;"	f	class:Date
stat	/code/orig/bet_store/app/models/bet_store/question.rb	/^      def stat; unit; end$/;"	f	class:BetStore.Question.OverUnder
stat	/code/orig/bet_store/app/models/bet_store/question.rb	/^      def stat; unit; end$/;"	f	class:BetStore.Question.Vs
stat	/code/orig/bet_store/junk/app/models/bet_store/question.rb	/^      def stat; unit; end$/;"	f	class:BetStore.Question.OverUnder
stat	/code/orig/bet_store/junk/app/models/bet_store/question.rb	/^      def stat; unit; end$/;"	f	class:BetStore.Question.Vs
stat	/code/orig/bet_store/lib/bet_store/question.rb	/^      def stat; unit; end$/;"	f	class:BetStore.Question.OverUnder
stat	/code/orig/bet_store/lib/bet_store/question.rb	/^      def stat; unit; end$/;"	f	class:BetStore.Question.Vs
stat	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    def stat$/;"	f	class:SeasonProp
stats	/code/orig/baseball/lib/baseball/game.rb	/^    fattr(:stats) do$/;"	r
stats	/code/orig/baseball/lib/baseball/stats.rb	/^    fattr(:stats) do$/;"	r
stats_to_randomize	/code/orig/baseball_projection/lib/baseball_projection/stat.rb	/^      def stats_to_randomize$/;"	f	class:BaseballProjection.Stat
status	/code/orig/project_group/lib/project_group/single.rb	/^    def status$/;"	f	class:ProjectGroup
stuff	/code/orig/odds/vol/parlays_as_horses.rb	/^def stuff$/;"	f
stuff	/code/orig/sim_back/vol/fork_test.rb	/^def stuff$/;"	f
stuff1	/code/orig/project_group/vol/pipe_test.rb	/^def stuff1$/;"	f
stuff1	/code/orig/sim_back/vol/fork_test.rb	/^def stuff1$/;"	f
stuff2	/code/orig/project_group/vol/pipe_test.rb	/^def stuff2$/;"	f
subclass_counts	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^  def subclass_counts$/;"	f	class:Object
sum	/code/orig/baseball_projection/lib/baseball_projection.rb	/^  def sum$/;"	f	class:Array
sum	/code/orig/odds/lib/odds/ext/math.rb	/^  def sum$/;"	f	class:Array
summed	/code/orig/sim_back/spec/support_ext/basic_imp.rb	/^      def summed(progress)$/;"	f	class:SimBack.NumberObj
tb	/code/orig/baseball_projection/lib/baseball_projection/calced_stats_mod.rb	/^    def tb$/;"	f	class:BaseballProjection.CalcedStatsMod
team	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/prop_line.rb	/^    def team$/;"	f	class:QuebecLottery.PropLine
team_prop?	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    def team_prop?$/;"	f	class:SeasonProp
team_type	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/load.rb	/^    def team_type(str)$/;"	f	class:QuebecLottery.SaveGameProp
teams	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/game_props.rb	/^    fattr(:teams) do$/;"	r
tests	/code/orig/project_group/spec/run_tests_spec.rb	/^  let(:tests) do$/;"	r
times_product	/code/orig/odds/lib/odds/ext/math.rb	/^  def times_product$/;"	f	class:Array
tm	/code/orig/baseball_lottery/lib/baseball_lottery.rb	/^def tm(name)$/;"	f
tmp_dir	/code/orig/project_group/spec/support/make_initial.rb	/^    def tmp_dir$/;"	f
tmp_dir	/code/orig/project_group/spec/support/make_initial.rb	/^  def tmp_dir$/;"	f	class:MakeInitial
to_csv	/code/orig/espn_scores/lib/espn_scores/day.rb	/^    def to_csv$/;"	f	class:EspnScores.Day
to_expanded_query_syntax	/code/orig/baseball_projection/lib/baseball_projection/ext.rb	/^  def to_expanded_query_syntax$/;"	f	class:Hash
to_f_safe	/code/orig/quebec_lottery/gem/lib/quebec_lottery.rb	/^  def to_f_safe$/;"	f	class:String
to_fair	/code/orig/odds/lib/odds/lines.rb	/^    def to_fair$/;"	f	class:Odds.Lines
to_if	/code/orig/odds/lib/odds/ext/numeric.rb	/^  def to_if$/;"	f	class:Numeric
to_json	/code/orig/espn_scores/lib/espn_scores/day.rb	/^    def to_json(*args)$/;"	f	class:EspnScores.Day
to_json	/code/orig/espn_scores/lib/espn_scores/game.rb	/^    def to_json(*args)$/;"	f	class:EspnScores.Game
to_json	/code/orig/project_group/lib/project_group/sublime_project.rb	/^    def to_json$/;"	f	class:ProjectGroup.SublimeProject
to_name	/code/orig/bet_store/junk/deps.rb	/^  def to_name$/;"	f	class:Array
to_name	/code/orig/bet_store/junk/deps.rb	/^  def to_name$/;"	f	class:Hash
to_name	/code/orig/bet_store/junk/deps.rb	/^  def to_name$/;"	f	class:Object
to_next	/code/orig/espn_scores/lib/espn_scores/week.rb	/^    def to_next$/;"	f	class:EspnScores.Week
to_odds	/code/orig/odds/lib/odds/ext/to_odds.rb	/^  def to_odds$/;"	f	class:String
to_over_bet	/code/orig/baseball_lottery/lib/baseball_lottery/stat_bet.rb	/^    def to_over_bet$/;"	f	class:BaseballLottery.StatBet
to_player	/code/orig/baseball_projection/lib/baseball_projection/composite_projection.rb	/^    def to_player$/;"	f	class:BaseballProjection.CompositeProjection
to_player	/code/orig/baseball_projection/lib/baseball_projection/single_projection.rb	/^    def to_player$/;"	f	class:BaseballProjection.SingleProjection
to_s	/code/orig/baseball_lottery/lib/baseball_lottery/sims.rb	/^    def to_s$/;"	f
to_s	/code/orig/baseball_lottery/lib/baseball_lottery/stat_bet.rb	/^    def to_s$/;"	f	class:BaseballLottery.StatBet
to_s	/code/orig/baseball_projection/lib/baseball_projection/composite_projection.rb	/^    def to_s$/;"	f	class:BaseballProjection.CompositeProjection
to_s	/code/orig/baseball_projection/lib/baseball_projection/randomized_projection.rb	/^    def to_s$/;"	f	class:BaseballProjection.RandomizedProjection
to_s	/code/orig/baseball_projection/lib/baseball_projection/samples.rb	/^    def to_s(*percs)$/;"	f	class:BaseballProjection.Samples
to_s	/code/orig/baseball_projection/lib/baseball_projection/single_projection.rb	/^    def to_s$/;"	f	class:BaseballProjection.SingleProjection
to_s	/code/orig/bet_store/app/models/bet_store/side.rb	/^      def to_s$/;"	f	class:BetStore.Side.Base
to_s	/code/orig/bet_store/junk/app/models/bet_store/side.rb	/^      def to_s$/;"	f	class:BetStore.Side.Base
to_s	/code/orig/bet_store/lib/bet_store/side.rb	/^      def to_s$/;"	f	class:BetStore.Side.Base
to_s	/code/orig/espn_scores/lib/espn_scores/game.rb	/^    def to_s$/;"	f	class:EspnScores.Game
to_s	/code/orig/espn_scores/lib/espn_scores/week.rb	/^    def to_s$/;"	f	class:EspnScores.Week
to_s	/code/orig/odds/lib/odds/algorithms/correlated_kelly.rb	/^        def to_s$/;"	f	class:Odds.Algorithms.CorrelatedKelly.Calc
to_s	/code/orig/odds/lib/odds/bet.rb	/^    def to_s$/;"	f	class:Odds.Bet
to_s	/code/orig/odds/lib/odds/lines.rb	/^    def to_s$/;"	f	class:Odds.Lines
to_s	/code/orig/odds/lib/odds/odds.rb	/^    def to_s$/;"	f	class:Odds.Odds
to_s	/code/orig/odds/lib/odds/parlay.rb	/^    def to_s$/;"	f	class:Odds.Parlay
to_s	/code/orig/project_group/lib/project_group/config.rb	/^    def to_s$/;"	f	class:ProjectGroup
to_s	/code/orig/project_group/lib/project_group/group.rb	/^    def to_s$/;"	f	class:ProjectGroup.Group
to_s	/code/orig/project_group/lib/project_group/single.rb	/^    def to_s$/;"	f	class:ProjectGroup
to_s	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/prop.rb	/^    def to_s$/;"	f	class:QuebecLottery
to_s	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/prop_line.rb	/^    def to_s$/;"	f	class:QuebecLottery.PropLine
to_s	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    def to_s$/;"	f	class:SeasonProp
to_s	/code/orig/sim_back/spec/support/fake_runner.rb	/^  def to_s$/;"	f	class:FakeRunner
to_s_bankroll_percs	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^  def to_s_bankroll_percs$/;"	f	class:Array
to_s_curr	/code/orig/odds/lib/odds/ext/string.rb	/^  def to_s_curr(digits=2)$/;"	f	class:Numeric
to_s_fitness	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^  def to_s_fitness$/;"	f	class:ParlayPercs
to_s_perc	/code/orig/odds/lib/odds/ext/string.rb	/^  def to_s_perc(digits=2)$/;"	f	class:Numeric
to_s_to_one	/code/orig/odds/lib/odds/odds.rb	/^    def to_s_to_one$/;"	f	class:Odds.Odds
to_under_bet	/code/orig/baseball_lottery/lib/baseball_lottery/stat_bet.rb	/^    def to_under_bet$/;"	f	class:BaseballLottery.StatBet
to_vig	/code/orig/odds/lib/odds/lines.rb	/^    def to_vig(target_vig)$/;"	f	class:Odds.Lines
to_win_chance	/code/orig/odds/lib/odds/lines.rb	/^    def to_win_chance(target_win_chance)$/;"	f	class:Odds.Lines
tob	/code/orig/baseball_projection/lib/baseball_projection/calced_stats_mod.rb	/^    def tob$/;"	f	class:BaseballProjection.CalcedStatsMod
top_combined	/code/orig/odds/lib/odds/algorithms/genetic.rb	/^  def top_combined(n)$/;"	f	class:GeneticAlgorithm
total	/code/orig/bet_store/spec/question/over_under_spec.rb	/^      let(:total) { 202.5 }$/;"	r
total_spread	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/load.rb	/^    def total_spread(str)$/;"	f	class:QuebecLottery.SaveGameProp
total_type	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/load.rb	/^    def total_type(str)$/;"	f	class:QuebecLottery.SaveGameProp
type	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/prop.rb	/^    def type$/;"	f	class:QuebecLottery
uncommitted_files	/code/orig/project_group/lib/project_group/group.rb	/^    def uncommitted_files$/;"	f	class:ProjectGroup.Group
uncommitted_files	/code/orig/project_group/lib/project_group/single.rb	/^    def uncommitted_files$/;"	f	class:ProjectGroup
under	/code/orig/baseball_lottery/spec/sims_spec.rb	/^  let(:under) do$/;"	r
under_odds=	/code/orig/baseball_lottery/lib/baseball_lottery/stat_bet.rb	/^    def under_odds=(x)$/;"	f	class:BaseballLottery.StatBet
unprocessed	/code/orig/project_group/vol/mock_deps.rb	/^  def unprocessed$/;"	f	class:Deps
update_private_gem	/code/orig/project_group/lib/project_group/command.rb	/^    def update_private_gem(path)$/;"	f	class:ProjectGroup.Command
url	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^    fattr(:url) do$/;"	r
url	/code/orig/espn_scores/spec/basketball_spec.rb	/^    let(:url) do$/;"	r
url	/code/orig/espn_scores/spec/college_football_spec.rb	/^    let(:url) do$/;"	r
url	/code/orig/espn_scores/spec/espn_scores_spec.rb	/^    let(:url) { "http:\/\/scores.espn.go.com\/mlb\/scoreboard?date=20130911" }$/;"	r
url	/code/orig/espn_scores/spec/football_spec.rb	/^    let(:url) do$/;"	r
url	/code/orig/espn_scores/spec/hockey_spec.rb	/^    let(:url) do$/;"	r
url	/code/orig/game_store/spec/load_games_spec.rb	/^  let(:url) do$/;"	r
url_date_str	/code/orig/espn_scores/lib/espn_scores/day.rb	/^    def url_date_str$/;"	f	class:EspnScores.Day
use_file?	/code/orig/project_group/lib/project_group/repo.rb	/^    def use_file?(f)$/;"	f	class:ProjectGroup.Repo
uses_week?	/code/orig/espn_scores/lib/espn_scores/date_parse.rb	/^    def uses_week?$/;"	f	class:EspnScores.DateParse
utility	/code/orig/odds/lib/odds/algorithms/parlay_utility.rb	/^      def utility$/;"	f	class:Odds.Algorithms.ParlayUtility.log_utility_for_scenario
valid_parlay_bets?	/code/orig/baseball_lottery/lib/baseball_lottery/sims.rb	/^    def valid_parlay_bets?(candidate_bets)$/;"	f	class:Sims
vig	/code/orig/odds/lib/odds/lines.rb	/^    def vig$/;"	f	class:Odds.Lines
vs_prop?	/code/orig/quebec_lottery/gem/lib/quebec_lottery/season/season_props.rb	/^    def vs_prop?$/;"	f	class:SeasonProp
vs_unit	/code/orig/quebec_lottery/gem/lib/quebec_lottery/game/load.rb	/^    def vs_unit$/;"	f	class:QuebecLottery.SaveGameProp
warn	/code/orig/mongoid_gem_config/lib/mongoid_gem_config.rb	/^  def warn(*args)$/;"	f	class:MyLogger
week	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^    def week$/;"	f	class:EspnScores.BaseFootballDay
week_for_date	/code/orig/espn_scores/lib/espn_scores/week.rb	/^      def week_for_date(ops)$/;"	f	class:EspnScores.Week
week_old	/code/orig/espn_scores/lib/espn_scores/day_types.rb	/^    def week_old$/;"	f	class:EspnScores.BaseFootballDay
where	/code/orig/baseball_projection/lib/baseball_projection/saved_projection.rb	/^    def where(*args)$/;"	f	class:BaseballProjection.EnsuredWhere
win_amount_with_principal	/code/orig/odds/lib/odds/bet.rb	/^    def win_amount_with_principal$/;"	f	class:Odds.Bet
win_amount_with_principal	/code/orig/odds/lib/odds/odds.rb	/^    def win_amount_with_principal$/;"	f	class:Odds.Odds
win_amount_without_principal	/code/orig/odds/lib/odds/bet.rb	/^    def win_amount_without_principal$/;"	f	class:Odds.Bet
win_amount_without_principal	/code/orig/odds/lib/odds/odds.rb	/^    def win_amount_without_principal$/;"	f	class:Odds.Odds
win_chance=	/code/orig/odds/lib/odds/odds.rb	/^    def win_chance=(w)$/;"	f	class:Odds.Odds
winning_parlays	/code/orig/odds/lib/odds/special/combination_parlay.rb	/^    def winning_parlays(winning_bets)$/;"	f	class:Odds.CombinationParlay
with_projects	/code/orig/project_group/spec/support/make_initial.rb	/^  def with_projects(&b)$/;"	f	class:MakeInitial
without_vig	/code/orig/odds/lib/odds/bet.rb	/^    def without_vig(vig)$/;"	f	class:Odds.Bet
without_vig	/code/orig/odds/lib/odds/odds.rb	/^    def without_vig(vig)$/;"	f	class:Odds
worker_classes	/code/orig/sim_back/lib/sim_back/util.rb	/^    def worker_classes$/;"	f	class:SimBack
write	/code/orig/project_group/vol/pipe_test.rb	/^  def write(str)$/;"	f	class:CaptureOut
write	/code/orig/sim_back/vol/fork_test.rb	/^  def write(str)$/;"	f	class:CaptureOut
write!	/code/orig/odds/vol/parlays_as_horses.rb	/^  def write!$/;"	f	class:Sims
write!	/code/orig/project_group/lib/project_group/sublime_project.rb	/^    def write!$/;"	f	class:ProjectGroup.SublimeProject
write_pipe	/code/orig/project_group/vol/pipe_test.rb	/^  def write_pipe; pipes[1]; end$/;"	f	class:Spawn
xyzabc	/code/orig/project_group/lib/project_group.rb	/^  fattr(:xyzabc) do$/;"	r
year	/code/orig/espn_scores/lib/espn_scores/web.rb	/^      def year$/;"	f	class:EspnScores.Web
year	/code/orig/espn_scores/spec/date_parse_spec.rb	/^      let(:year) { '2013' }$/;"	r
year	/code/orig/espn_scores/spec/date_parse_spec.rb	/^  let(:year) { nil }$/;"	r
